{
    "project": {
        "name": "scmf",
        "description": "SCMF Project",
        "version": "1.0.0",
        "url": "",
        "logo": "http://media.usabilitydynamics.com/logo.png"
    },
    "files": {
        "application/static/scripts/src/lib/buytickets.js": {
            "name": "application/static/scripts/src/lib/buytickets.js",
            "modules": {},
            "classes": {
                "buytickets": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/lib/countdown.js": {
            "name": "application/static/scripts/src/lib/countdown.js",
            "modules": {},
            "classes": {
                "countDown": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/lib/dotdotdot.js": {
            "name": "application/static/scripts/src/lib/dotdotdot.js",
            "modules": {},
            "classes": {
                "dotdotdot": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/lib/equalheights.js": {
            "name": "application/static/scripts/src/lib/equalheights.js",
            "modules": {},
            "classes": {
                "equalize": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/lib/masonry.js": {
            "name": "application/static/scripts/src/lib/masonry.js",
            "modules": {},
            "classes": {
                "masonry": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/lib/navigation.js": {
            "name": "application/static/scripts/src/lib/navigation.js",
            "modules": {},
            "classes": {
                "navigation": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/lib/smoothscroll.js": {
            "name": "application/static/scripts/src/lib/smoothscroll.js",
            "modules": {},
            "classes": {
                "smoothscroll": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/lib/stickem.js": {
            "name": "application/static/scripts/src/lib/stickem.js",
            "modules": {
                "init": 1
            },
            "classes": {
                "stickem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/lib/stickynav.js": {
            "name": "application/static/scripts/src/lib/stickynav.js",
            "modules": {},
            "classes": {
                "stickynav": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/lib/swipe.js": {
            "name": "application/static/scripts/src/lib/swipe.js",
            "modules": {},
            "classes": {
                "swipe": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "application/static/scripts/src/app.js": {
            "name": "application/static/scripts/src/app.js",
            "modules": {
                "SCMF": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js": {
            "name": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/components/jquery/jquery-built.js": {
            "name": "vendor/components/jquery/jquery-built.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/components/jquery/jquery.js": {
            "name": "vendor/components/jquery/jquery.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/components/stickem/jquery.stickem.js": {
            "name": "vendor/components/stickem/jquery.stickem.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/components/stickem/stickem-built.js": {
            "name": "vendor/components/stickem/stickem-built.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/components/require-built.js": {
            "name": "vendor/components/require-built.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/components/require.js": {
            "name": "vendor/components/require.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/components/jquery/jquery.js": {
            "name": "vendor/libraries/components/jquery/jquery.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine-tap.js": {
            "name": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine-tap.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js": {
            "name": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/components/knockout/spec/runner.phantom.js": {
            "name": "vendor/libraries/components/knockout/spec/runner.phantom.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/components/masonry/dist/masonry.pkgd.js": {
            "name": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "modules": {},
            "classes": {
                "EventEmitter Manages event registering and emitting.": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/components/masonry/examples/js/masonry-v2-shim.js": {
            "name": "vendor/libraries/components/masonry/examples/js/masonry-v2-shim.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/components/masonry/masonry.js": {
            "name": "vendor/libraries/components/masonry/masonry.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/components/stickem/jquery.stickem.js": {
            "name": "vendor/libraries/components/stickem/jquery.stickem.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/kriswallsmith/assetic/tests/Assetic/Test/Filter/fixtures/packer/example.js": {
            "name": "vendor/libraries/kriswallsmith/assetic/tests/Assetic/Test/Filter/fixtures/packer/example.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/kriswallsmith/assetic/tests/Assetic/Test/Filter/fixtures/uglifyjs/script.js": {
            "name": "vendor/libraries/kriswallsmith/assetic/tests/Assetic/Test/Filter/fixtures/uglifyjs/script.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js": {
            "name": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/robloach/component-installer/tests/ComponentInstaller/Test/Resources/test.js": {
            "name": "vendor/libraries/robloach/component-installer/tests/ComponentInstaller/Test/Resources/test.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "vendor/libraries/robloach/component-installer/tests/ComponentInstaller/Test/Resources/test2.js": {
            "name": "vendor/libraries/robloach/component-installer/tests/ComponentInstaller/Test/Resources/test2.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "gruntfile.js": {
            "name": "gruntfile.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "init": {
            "name": "init",
            "submodules": {},
            "classes": {
                "buytickets": 1,
                "countDown": 1,
                "dotdotdot": 1,
                "equalize": 1,
                "masonry": 1,
                "navigation": 1,
                "smoothscroll": 1,
                "stickem": 1,
                "stickynav": 1,
                "swipe": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "application/static/scripts/src/lib/swipe.js",
            "line": 1,
            "description": "Bootstrap the module"
        },
        "SCMF": {
            "name": "SCMF",
            "submodules": {},
            "classes": {
                "EventEmitter Manages event registering and emitting.": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 310,
            "description": "Main entry point for Javascript. Loads several sub-modules and sets up the page.",
            "itemtype": "main"
        }
    },
    "classes": {
        "buytickets": {
            "name": "buytickets",
            "shortname": "buytickets",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "file": "application/static/scripts/src/lib/buytickets.js",
            "line": 1,
            "description": "Buy tickets popup"
        },
        "countDown": {
            "name": "countDown",
            "shortname": "countDown",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "file": "application/static/scripts/src/lib/countdown.js",
            "line": 1,
            "description": "Sets up the countDown timer, attaches to .count-down tag and calculates the remaining\ntime from today - data-todate attribute.",
            "return": {
                "description": "init() function to bootstrap the countDown class",
                "type": "Object"
            }
        },
        "dotdotdot": {
            "name": "dotdotdot",
            "shortname": "dotdotdot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "file": "application/static/scripts/src/lib/dotdotdot.js",
            "line": 1,
            "description": "Trim long text blocks"
        },
        "equalize": {
            "name": "equalize",
            "shortname": "equalize",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "file": "application/static/scripts/src/lib/equalheights.js",
            "line": 1,
            "description": "Compare the heights of specified elements and give the biggest height to each."
        },
        "masonry": {
            "name": "masonry",
            "shortname": "masonry",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "file": "application/static/scripts/src/lib/masonry.js",
            "line": 1,
            "description": "Masonry layout for photos"
        },
        "navigation": {
            "name": "navigation",
            "shortname": "navigation",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "file": "application/static/scripts/src/lib/navigation.js",
            "line": 1,
            "description": "Navigation Popup"
        },
        "smoothscroll": {
            "name": "smoothscroll",
            "shortname": "smoothscroll",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "file": "application/static/scripts/src/lib/smoothscroll.js",
            "line": 1,
            "description": "Animate scroll for header down arrow."
        },
        "stickem": {
            "name": "stickem",
            "shortname": "stickem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "file": "application/static/scripts/src/lib/stickem.js",
            "line": 1,
            "description": "Sticks the artist lineup content within its block"
        },
        "stickynav": {
            "name": "stickynav",
            "shortname": "stickynav",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "namespace": "",
            "file": "application/static/scripts/src/lib/stickynav.js",
            "line": 1,
            "description": "Sticky navigation class"
        },
        "swipe": {
            "name": "swipe",
            "shortname": "swipe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "init",
            "namespace": "",
            "file": "application/static/scripts/src/lib/swipe.js",
            "line": 1,
            "description": "Initialize the swipe functionality for different sliders on the page."
        },
        "EventEmitter Manages event registering and emitting.": {
            "name": "EventEmitter Manages event registering and emitting.",
            "shortname": "EventEmitter Manages event registering and emitting.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "SCMF",
            "namespace": "",
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 310,
            "description": "Class for managing events.\nCan be extended to provide event functionality in other classes."
        }
    },
    "classitems": [
        {
            "file": "application/static/scripts/src/lib/buytickets.js",
            "line": 11,
            "description": "Event for showing the overlay",
            "itemtype": "method",
            "name": "eventOpen",
            "class": "buytickets"
        },
        {
            "file": "application/static/scripts/src/lib/buytickets.js",
            "line": 29,
            "description": "Event for closing the overlay",
            "itemtype": "method",
            "name": "eventClose",
            "class": "buytickets"
        },
        {
            "file": "application/static/scripts/src/lib/buytickets.js",
            "line": 62,
            "description": "Bootstrap the buy tickets plugin",
            "itemtype": "method",
            "name": "init",
            "class": "buytickets"
        },
        {
            "file": "application/static/scripts/src/lib/countdown.js",
            "line": 26,
            "description": "Get the day, hour, minute, second elements",
            "itemtype": "method",
            "name": "getElements",
            "return": {
                "description": "void"
            },
            "class": "countDown"
        },
        {
            "file": "application/static/scripts/src/lib/countdown.js",
            "line": 39,
            "description": "Get the 'to date' from the count-down element",
            "itemtype": "method",
            "name": "getToDate",
            "return": {
                "description": "void"
            },
            "class": "countDown"
        },
        {
            "file": "application/static/scripts/src/lib/countdown.js",
            "line": 49,
            "description": "Calculate the remaining time to the end date",
            "itemtype": "method",
            "name": "calcRemaining",
            "return": {
                "description": "void"
            },
            "class": "countDown"
        },
        {
            "file": "application/static/scripts/src/lib/countdown.js",
            "line": 81,
            "description": "Set up an interval to animate the count down.",
            "itemtype": "method",
            "name": "startTimer",
            "return": {
                "description": "void"
            },
            "class": "countDown"
        },
        {
            "file": "application/static/scripts/src/lib/dotdotdot.js",
            "line": 10,
            "description": "Initialize the trimming for the news-slider",
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "void"
            },
            "class": "dotdotdot"
        },
        {
            "file": "application/static/scripts/src/lib/equalheights.js",
            "line": 10,
            "description": "Give the max height to all the elements from the specified elements.",
            "itemtype": "method",
            "name": "equalize",
            "params": [
                {
                    "name": "elements",
                    "description": "jQuery object array of elements to compare the heights",
                    "type": "Object"
                },
                {
                    "name": "minimumWindowWidth",
                    "description": "Conditional to equalize heights if the view-port hits the minimum width",
                    "type": "Integer"
                }
            ],
            "return": {
                "description": "void"
            },
            "class": "equalize"
        },
        {
            "file": "application/static/scripts/src/lib/masonry.js",
            "line": 10,
            "description": "Initialize the Masonry layout",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "grid",
                    "description": "The object class or ID string which contains the items",
                    "type": "String"
                }
            ],
            "return": {
                "description": "A Masonry object",
                "type": "Masonry"
            },
            "class": "masonry"
        },
        {
            "file": "application/static/scripts/src/lib/navigation.js",
            "line": 12,
            "description": "Event for showing the overlay",
            "itemtype": "method",
            "name": "eventOpen",
            "class": "navigation"
        },
        {
            "file": "application/static/scripts/src/lib/navigation.js",
            "line": 31,
            "description": "Event for closing the overlay",
            "itemtype": "method",
            "name": "eventClose",
            "class": "navigation"
        },
        {
            "file": "application/static/scripts/src/lib/navigation.js",
            "line": 49,
            "description": "Transforms the HTML structure of the navigation to\ndifferentiate between mobile and desktop",
            "itemtype": "method",
            "name": "eventTransformStructure",
            "class": "navigation"
        },
        {
            "file": "application/static/scripts/src/lib/navigation.js",
            "line": 99,
            "description": "Accordion effect showing/hiding sub-menus.\nEffect is only available in mobile view.",
            "itemtype": "method",
            "name": "initAccordion",
            "class": "navigation"
        },
        {
            "file": "application/static/scripts/src/lib/navigation.js",
            "line": 136,
            "description": "Bootstrap the buy tickets plugin",
            "itemtype": "method",
            "name": "init",
            "class": "navigation"
        },
        {
            "file": "application/static/scripts/src/lib/smoothscroll.js",
            "line": 10,
            "description": "Bootstrap the smooth scroll effect.",
            "itemtype": "method",
            "name": "init",
            "return": {
                "description": "void"
            },
            "class": "smoothscroll"
        },
        {
            "file": "application/static/scripts/src/lib/stickynav.js",
            "line": 12,
            "description": "Get the navigation top position",
            "itemtype": "method",
            "name": "getNavTop",
            "class": "stickynav",
            "module": "init"
        },
        {
            "file": "application/static/scripts/src/lib/stickynav.js",
            "line": 24,
            "description": "Initialize the window scroll and detect when to stick the navigation",
            "itemtype": "method",
            "name": "eventScroll",
            "class": "stickynav",
            "module": "init"
        },
        {
            "file": "application/static/scripts/src/lib/stickynav.js",
            "line": 48,
            "description": "Bootstrap the sticky navigation plugin",
            "itemtype": "method",
            "name": "init",
            "class": "stickynav",
            "module": "init"
        },
        {
            "file": "application/static/scripts/src/lib/swipe.js",
            "line": 10,
            "description": "Bootstrap the swipe.",
            "itemtype": "method",
            "name": "init",
            "params": [
                {
                    "name": "container",
                    "description": "Element which contains the slider, must specify whether class or ID (ex. '.news-slider-container')",
                    "type": "String"
                },
                {
                    "name": "slider",
                    "description": "Element class or ID name, which contains the items",
                    "type": "String"
                },
                {
                    "name": "elems",
                    "description": "Element class or ID name of the items",
                    "type": "String"
                },
                {
                    "name": "indicatorElem",
                    "description": "Parent element of the scroll bar",
                    "type": "String"
                }
            ],
            "return": {
                "description": "IScroll object",
                "type": "IScroll"
            },
            "class": "swipe",
            "module": "init"
        },
        {
            "file": "application/static/scripts/src/lib/swipe.js",
            "line": 53,
            "description": "Destroy the scroller",
            "itemtype": "method",
            "name": "destroy",
            "params": [
                {
                    "name": "scroller",
                    "description": "The IScroll object returned from the init() method",
                    "type": "IScroll"
                }
            ],
            "return": {
                "description": "true is successful",
                "type": "Boolean"
            },
            "class": "swipe",
            "module": "init"
        },
        {
            "file": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "line": 1278,
            "description": "Options object. Only the URI and strictMode values can be changed via the setters below.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "line": 1301,
            "description": "Deals with the parsing of the URI according to the regex above.\nWritten by Steven Levithan - see credits at top.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "line": 1327,
            "description": "Returns the value of the passed in key from the parsed URI.",
            "params": [
                {
                    "name": "string",
                    "description": "key The key whose value is required"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "line": 1353,
            "description": "Returns the value of the required query string parameter.",
            "params": [
                {
                    "name": "string",
                    "description": "item The parameter whose value is required"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "line": 1367,
            "description": "'Constructor' (not really!) function.\n Called whenever the URI changes to kick off re-parsing of the URI and splitting it up into segments.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "line": 1378,
            "description": "Splits up the body of the URI into segments (i.e. sections delimited by '/')",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "line": 1390,
            "description": "Sets the parsing mode - either strict or loose. Set to loose by default.",
            "params": [
                {
                    "name": "string",
                    "description": "mode The mode to set the parser to. Anything apart from a value of 'strict' will set it to loose!"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "line": 1401,
            "description": "Sets URI to parse if you don't want to to parse the current page's URI.\nCalling the function with no value for newUri resets it to the current page's URI.",
            "params": [
                {
                    "name": "string",
                    "description": "newUri The URI to parse."
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js",
            "line": 1414,
            "description": "Returns the value of the specified URI segment. Segments are numbered from 1 to the number of segments.\nFor example the URI http://test.com/about/company/ segment(1) would return 'about'.\n\nIf no integer is passed into the function it returns the number of segments in the URI.",
            "params": [
                {
                    "name": "int",
                    "description": "pos The position of the segment to return. Can be empty."
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 841,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 861,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 870,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 891,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 905,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 934,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 945,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 956,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 978,
            "description": "Checks a node for validity as a Sizzle context",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Element|Object="
                }
            ],
            "return": {
                "description": "The input node if acceptable, otherwise a falsy value",
                "type": "Element|Object|Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 990,
            "description": "Detects XML nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "return": {
                "description": "True iff elem is a non-HTML XML node",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 1002,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 1432,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 1465,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 3374,
            "description": "The ready event handler and self cleanup method",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 3467,
            "description": "Determines whether an object can have data",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 5408,
            "description": "Retrieve the actual display of a element",
            "params": [
                {
                    "name": "name",
                    "description": "nodeName of the element",
                    "type": "String"
                },
                {
                    "name": "doc",
                    "description": "Document object",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 5431,
            "description": "Try to determine the default display value of an element",
            "params": [
                {
                    "name": "nodeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 8750,
            "description": "Load a url into a page",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery-built.js",
            "line": 8824,
            "description": "Gets a window from an element",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 841,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 861,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 870,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 891,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 905,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 934,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 945,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 956,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 978,
            "description": "Checks a node for validity as a Sizzle context",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Element|Object="
                }
            ],
            "return": {
                "description": "The input node if acceptable, otherwise a falsy value",
                "type": "Element|Object|Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 990,
            "description": "Detects XML nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "return": {
                "description": "True iff elem is a non-HTML XML node",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 1002,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 1432,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 1465,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 3374,
            "description": "The ready event handler and self cleanup method",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 3467,
            "description": "Determines whether an object can have data",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 5408,
            "description": "Retrieve the actual display of a element",
            "params": [
                {
                    "name": "name",
                    "description": "nodeName of the element",
                    "type": "String"
                },
                {
                    "name": "doc",
                    "description": "Document object",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 5431,
            "description": "Try to determine the default display value of an element",
            "params": [
                {
                    "name": "nodeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 8750,
            "description": "Load a url into a page",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/jquery/jquery.js",
            "line": 8824,
            "description": "Gets a window from an element",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/stickem/jquery.stickem.js",
            "line": 1,
            "name": "jQuery Stick 'em",
            "author": "Trevor Davis",
            "version": "1.4.1\n\n\t$('.container').stickem({\n\t\titem: '.stickem',\n\t\tcontainer: '.stickem-container',\n\t\tstickClass: 'stickit',\n\t\tendStickClass: 'stickit-end',\n\t\toffset: 0,\n\t\tonStick: null,\n\t\tonUnstick: null\n\t});",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/stickem/stickem-built.js",
            "line": 1,
            "name": "jQuery Stick 'em",
            "author": "Trevor Davis",
            "version": "1.4.1\n\n\t$('.container').stickem({\n\t\titem: '.stickem',\n\t\tcontainer: '.stickem-container',\n\t\tstickClass: 'stickit',\n\t\tendStickClass: 'stickit-end',\n\t\toffset: 0,\n\t\tonStick: null,\n\t\tonUnstick: null\n\t});",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1,
            "license": "RequireJS 2.1.5 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/requirejs for details",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 49,
            "description": "Helper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 64,
            "description": "Helper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 87,
            "description": "Cycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 103,
            "description": "Simple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 150,
            "description": "Constructs an error with a pointer to an URL with more information.",
            "params": [
                {
                    "name": "id",
                    "description": "the error ID that maps to an ID on a web page.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "human readable error.",
                    "type": "String"
                },
                {
                    "name": "err",
                    "description": "the original error, if there is one.",
                    "type": "Error",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 216,
            "description": "Trims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "params": [
                {
                    "name": "ary",
                    "description": "the array of path segments.",
                    "type": "Array"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 249,
            "description": "Given a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "params": [
                {
                    "name": "name",
                    "description": "the relative name",
                    "type": "String"
                },
                {
                    "name": "baseName",
                    "description": "a real name that the name arg is relative\nto.",
                    "type": "String"
                },
                {
                    "name": "applyMap",
                    "description": "apply the map config to the value. Should\nonly be done if this normalization is for a dependency ID.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "normalized name",
                "type": "String"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 395,
            "description": "Creates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "params": [
                {
                    "name": "name",
                    "description": "the module name",
                    "type": "String"
                },
                {
                    "name": "parentModuleMap",
                    "description": "parent module map\nfor the module name, used to resolve relative names.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "isNormalized:",
                    "description": "is the ID already normalized.\nThis is true if this call is done for a define() module ID.",
                    "type": "Boolean"
                },
                {
                    "name": "applyMap:",
                    "description": "apply the map config to the ID.\nShould only be true if this map is for a dependency.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 532,
            "description": "Internal method to transfer globalQueue items to this context's\ndefQueue.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 814,
            "description": "Checks if the module is ready to define itself, and if so,\ndefine it.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1168,
            "description": "Given an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "params": [
                {
                    "name": "evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1221,
            "description": "Set a configuration for the context.",
            "params": [
                {
                    "name": "cfg",
                    "description": "config object to integrate.",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1405,
            "description": "Converts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1467,
            "description": "Called to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1480,
            "description": "Internal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "params": [
                {
                    "name": "moduleName",
                    "description": "the name of the module to potentially complete.",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1536,
            "description": "Converts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1607,
            "description": "Executes a module callack function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "access": "private",
            "tagname": "",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1618,
            "description": "callback for script loads, used to check status of loading.",
            "params": [
                {
                    "name": "evt",
                    "description": "the event from the browser for the script\nthat was loaded.",
                    "type": "Event"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1640,
            "description": "Callback for script errors.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1655,
            "description": "Main entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1705,
            "description": "Support require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1713,
            "description": "Execute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "params": [
                {
                    "name": "fn",
                    "description": "function to execute later.",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1723,
            "description": "Export require as a global, but only if it does not already exist.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1770,
            "description": "Any errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "params": [
                {
                    "name": "err",
                    "description": "the error object.",
                    "type": "Error"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1779,
            "description": "Does the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "params": [
                {
                    "name": "context",
                    "description": "the require context to find state.",
                    "type": "Object"
                },
                {
                    "name": "moduleName",
                    "description": "the name of the module.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "the URL to the module.",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 1933,
            "description": "The function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 2006,
            "description": "Executes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "params": [
                {
                    "name": "text",
                    "description": "the text to execute/evaluate.",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 4925,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 4945,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 4954,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 4975,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 4989,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 5018,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 5029,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 5040,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 5062,
            "description": "Checks a node for validity as a Sizzle context",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Element|Object="
                }
            ],
            "return": {
                "description": "The input node if acceptable, otherwise a falsy value",
                "type": "Element|Object|Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 5074,
            "description": "Detects XML nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "return": {
                "description": "True iff elem is a non-HTML XML node",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 5086,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 5516,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 5549,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 7458,
            "description": "The ready event handler and self cleanup method",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 7551,
            "description": "Determines whether an object can have data",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 9492,
            "description": "Retrieve the actual display of a element",
            "params": [
                {
                    "name": "name",
                    "description": "nodeName of the element",
                    "type": "String"
                },
                {
                    "name": "doc",
                    "description": "Document object",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 9515,
            "description": "Try to determine the default display value of an element",
            "params": [
                {
                    "name": "nodeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 12834,
            "description": "Load a url into a page",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 12908,
            "description": "Gets a window from an element",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require-built.js",
            "line": 13312,
            "name": "jQuery Stick 'em",
            "author": "Trevor Davis",
            "version": "1.4.1\n\n\t$('.container').stickem({\n\t\titem: '.stickem',\n\t\tcontainer: '.stickem-container',\n\t\tstickClass: 'stickit',\n\t\tendStickClass: 'stickit-end',\n\t\toffset: 0,\n\t\tonStick: null,\n\t\tonUnstick: null\n\t});",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1,
            "license": "RequireJS 2.1.5 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/requirejs for details",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 49,
            "description": "Helper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 64,
            "description": "Helper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 87,
            "description": "Cycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 103,
            "description": "Simple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 150,
            "description": "Constructs an error with a pointer to an URL with more information.",
            "params": [
                {
                    "name": "id",
                    "description": "the error ID that maps to an ID on a web page.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "human readable error.",
                    "type": "String"
                },
                {
                    "name": "err",
                    "description": "the original error, if there is one.",
                    "type": "Error",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 216,
            "description": "Trims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "params": [
                {
                    "name": "ary",
                    "description": "the array of path segments.",
                    "type": "Array"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 249,
            "description": "Given a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "params": [
                {
                    "name": "name",
                    "description": "the relative name",
                    "type": "String"
                },
                {
                    "name": "baseName",
                    "description": "a real name that the name arg is relative\nto.",
                    "type": "String"
                },
                {
                    "name": "applyMap",
                    "description": "apply the map config to the value. Should\nonly be done if this normalization is for a dependency ID.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "normalized name",
                "type": "String"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 395,
            "description": "Creates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "params": [
                {
                    "name": "name",
                    "description": "the module name",
                    "type": "String"
                },
                {
                    "name": "parentModuleMap",
                    "description": "parent module map\nfor the module name, used to resolve relative names.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "isNormalized:",
                    "description": "is the ID already normalized.\nThis is true if this call is done for a define() module ID.",
                    "type": "Boolean"
                },
                {
                    "name": "applyMap:",
                    "description": "apply the map config to the ID.\nShould only be true if this map is for a dependency.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 532,
            "description": "Internal method to transfer globalQueue items to this context's\ndefQueue.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 814,
            "description": "Checks if the module is ready to define itself, and if so,\ndefine it.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1168,
            "description": "Given an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "params": [
                {
                    "name": "evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1221,
            "description": "Set a configuration for the context.",
            "params": [
                {
                    "name": "cfg",
                    "description": "config object to integrate.",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1405,
            "description": "Converts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1467,
            "description": "Called to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1480,
            "description": "Internal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "params": [
                {
                    "name": "moduleName",
                    "description": "the name of the module to potentially complete.",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1536,
            "description": "Converts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1607,
            "description": "Executes a module callack function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "access": "private",
            "tagname": "",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1618,
            "description": "callback for script loads, used to check status of loading.",
            "params": [
                {
                    "name": "evt",
                    "description": "the event from the browser for the script\nthat was loaded.",
                    "type": "Event"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1640,
            "description": "Callback for script errors.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1655,
            "description": "Main entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1705,
            "description": "Support require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1713,
            "description": "Execute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "params": [
                {
                    "name": "fn",
                    "description": "function to execute later.",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1723,
            "description": "Export require as a global, but only if it does not already exist.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1770,
            "description": "Any errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "params": [
                {
                    "name": "err",
                    "description": "the error object.",
                    "type": "Error"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1779,
            "description": "Does the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "params": [
                {
                    "name": "context",
                    "description": "the require context to find state.",
                    "type": "Object"
                },
                {
                    "name": "moduleName",
                    "description": "the name of the module.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "the URL to the module.",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 1933,
            "description": "The function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/components/require.js",
            "line": 2006,
            "description": "Executes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "params": [
                {
                    "name": "text",
                    "description": "the text to execute/evaluate.",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 841,
            "description": "Create key-value caches of limited size",
            "return": {
                "description": "Returns the Object data after storing it on itself with\n\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n\tdeleting the oldest entry",
                "type": "Function(string, Object)"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 861,
            "description": "Mark a function for special use by Sizzle",
            "params": [
                {
                    "name": "fn",
                    "description": "The function to mark",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 870,
            "description": "Support testing using an element",
            "params": [
                {
                    "name": "fn",
                    "description": "Passed the created div and expects a boolean result",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 891,
            "description": "Adds the same handler for all of the specified attrs",
            "params": [
                {
                    "name": "attrs",
                    "description": "Pipe-separated list of attributes",
                    "type": "String"
                },
                {
                    "name": "handler",
                    "description": "The method that will be applied",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 905,
            "description": "Checks document order of two siblings",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "Returns less than 0 if a precedes b, greater than 0 if a follows b",
                "type": "Number"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 934,
            "description": "Returns a function to use in pseudos for input types",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 945,
            "description": "Returns a function to use in pseudos for buttons",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 956,
            "description": "Returns a function to use in pseudos for positionals",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 978,
            "description": "Checks a node for validity as a Sizzle context",
            "params": [
                {
                    "name": "context",
                    "description": "",
                    "type": "Element|Object="
                }
            ],
            "return": {
                "description": "The input node if acceptable, otherwise a falsy value",
                "type": "Element|Object|Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 990,
            "description": "Detects XML nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "An element or a document",
                    "type": "Element|Object"
                }
            ],
            "return": {
                "description": "True iff elem is a non-HTML XML node",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 1002,
            "description": "Sets document-related variables once based on the current document",
            "params": [
                {
                    "name": "doc",
                    "description": "An element or document object to use to set the document",
                    "type": "Element|Object",
                    "optional": true
                }
            ],
            "return": {
                "description": "Returns the current document",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 1432,
            "description": "Document sorting and removing duplicates",
            "params": [
                {
                    "name": "results",
                    "description": "",
                    "type": "ArrayLike"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 1465,
            "description": "Utility function for retrieving the text value of an array of DOM nodes",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Array|Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 3374,
            "description": "The ready event handler and self cleanup method",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 3467,
            "description": "Determines whether an object can have data",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 5408,
            "description": "Retrieve the actual display of a element",
            "params": [
                {
                    "name": "name",
                    "description": "nodeName of the element",
                    "type": "String"
                },
                {
                    "name": "doc",
                    "description": "Document object",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 5431,
            "description": "Try to determine the default display value of an element",
            "params": [
                {
                    "name": "nodeName",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 8750,
            "description": "Load a url into a page",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/jquery/jquery.js",
            "line": 8824,
            "description": "Gets a window from an element",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine-tap.js",
            "line": 9,
            "description": "TAP (http://en.wikipedia.org/wiki/Test_Anything_Protocol) reporter.\noutputs spec results to the console.\n\nHeavily inspired by ConsoleReporter found at:\nhttps://github.com/larrymyers/jasmine-reporters/\n\nUsage:\n\njasmine.getEnv().addReporter(new jasmine.TapReporter());\njasmine.getEnv().execute();",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 3,
            "description": "Top level namespace for Jasmine, a lightweight JavaScript BDD/spec/testing framework.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 10,
            "access": "private",
            "tagname": "",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 17,
            "description": "Use <code>jasmine.undefined</code> instead of <code>undefined</code>, since <code>undefined</code> is just\na plain old variable and may be redefined by somebody else.",
            "access": "private",
            "tagname": "",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 25,
            "description": "Show diagnostic messages in the console if set to true",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 31,
            "description": "Default interval in milliseconds for event loop yields (e.g. to allow network activity or to refresh the screen with the HTML-based runner). Small values here may result in slow test running. Zero means no updates until all tests have completed.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 37,
            "description": "Default timeout interval in milliseconds for waitsFor() blocks.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 50,
            "description": "Allows for bound functions to be compared.  Internal use only.",
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "base",
                    "description": "bound 'this' for the function",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "function to find",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 114,
            "description": "Getter for the Jasmine environment. Ensures one gets created",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 122,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 132,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 142,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 152,
            "ignore": "",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "typeName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 163,
            "description": "Pretty printer for expecations.  Takes any object and turns it into a human-readable string.",
            "params": [
                {
                    "name": "value",
                    "description": "an object to be outputted",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 175,
            "description": "Returns true if the object is a DOM Node.",
            "params": [
                {
                    "name": "obj",
                    "description": "object to check",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 185,
            "description": "Returns a matchable 'generic' object of the class type.  For use in expecations of type when values don't matter.",
            "example": [
                "\n// don't care about which function is passed in, as long as it's a function\nexpect(mySpy).toHaveBeenCalledWith(jasmine.any(Function));"
            ],
            "params": [
                {
                    "name": "clazz",
                    "description": "",
                    "type": "Class"
                }
            ],
            "return": {
                "description": "matchable object of the type clazz"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 199,
            "description": "Returns a matchable subset of a JSON object. For use in expectations when you don't care about all of the\nattributes on the object.",
            "example": [
                "\n// don't care about any other attributes than foo.\nexpect(mySpy).toHaveBeenCalledWith(jasmine.objectContaining({foo: \"bar\"});"
            ],
            "params": [
                {
                    "name": "sample",
                    "description": "sample",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "matchable object for the sample"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 214,
            "description": "Jasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks.\n\nSpies should be created in test setup, before expectations.  They can then be checked, using the standard Jasmine\nexpectation syntax. Spies can be checked if they were called or not and what the calling params were.\n\nA Spy has the following fields: wasCalled, callCount, mostRecentCall, and argsForCall (see docs).\n\nSpies are torn down at the end of every spec.\n\nNote: Do <b>not</b> call new jasmine.Spy() directly - a spy must be created using spyOn, jasmine.createSpy or jasmine.createSpyObj.",
            "example": [
                "\n// a stub\nvar myStub = jasmine.createSpy('myStub');  // can be used anywhere\n\n// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\n\n// actual foo.not will not be called, execution stops\nspyOn(foo, 'not');\n\n// foo.not spied upon, execution will continue to implementation\nspyOn(foo, 'not').andCallThrough();\n\n// fake example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\n\n// foo.not(val) will return val\nspyOn(foo, 'not').andCallFake(function(value) {return value;});\n\n// mock example\nfoo.not(7 == 7);\nexpect(foo.not).toHaveBeenCalled();\nexpect(foo.not).toHaveBeenCalledWith(true);"
            ],
            "is_constructor": 1,
            "see": [
                "spyOn",
                "jasmine.createSpy",
                "jasmine.createSpyObj"
            ],
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 259,
            "description": "The name of the spy, if provided.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 263,
            "description": "Is this Object a spy?",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 267,
            "description": "The actual function this spy stubs.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 272,
            "description": "Tracking of the most recent call to the spy.",
            "example": [
                "\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy.mostRecentCall.args = [1, 2];"
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 281,
            "description": "Holds arguments for each call to the spy, indexed by call count",
            "example": [
                "\nvar mySpy = jasmine.createSpy('foo');\nmySpy(1, 2);\nmySpy(7, 8);\nmySpy.mostRecentCall.args = [7, 8];\nmySpy.argsForCall[0] = [1, 2];\nmySpy.argsForCall[1] = [7, 8];"
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 295,
            "description": "Tells a spy to call through to the actual implemenatation.",
            "example": [
                "\nvar foo = {\n  bar: function() { // do some stuff }\n}\n\n// defining a spy on an existing property: foo.bar\nspyOn(foo, 'bar').andCallThrough();"
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 311,
            "description": "For setting the return value of a spy.",
            "example": [
                "\n// defining a spy from scratch: foo() returns 'baz'\nvar foo = jasmine.createSpy('spy on foo').andReturn('baz');\n\n// defining a spy on an existing property: foo.bar() returns 'baz'\nspyOn(foo, 'bar').andReturn('baz');"
            ],
            "params": [
                {
                    "name": "value",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 330,
            "description": "For throwing an exception when a spy is called.",
            "example": [
                "\n// defining a spy from scratch: foo() throws an exception w/ message 'ouch'\nvar foo = jasmine.createSpy('spy on foo').andThrow('baz');\n\n// defining a spy on an existing property: foo.bar() throws an exception w/ message 'ouch'\nspyOn(foo, 'bar').andThrow('baz');"
            ],
            "params": [
                {
                    "name": "exceptionMsg",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 349,
            "description": "Calls an alternate implementation when a spy is called.",
            "example": [
                "\nvar baz = function() {\n  // do some stuff, return something\n}\n// defining a spy from scratch: foo() calls the function baz\nvar foo = jasmine.createSpy('spy on foo').andCall(baz);\n\n// defining a spy on an existing property: foo.bar() calls an anonymnous function\nspyOn(foo, 'bar').andCall(function() { return 'baz';} );"
            ],
            "params": [
                {
                    "name": "fakeFunc",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 369,
            "description": "Resets all of a spy's the tracking variables so that it can be used again.",
            "example": [
                "\nspyOn(foo, 'bar');\n\nfoo.bar();\n\nexpect(foo.bar.callCount).toEqual(1);\n\nfoo.bar.reset();\n\nexpect(foo.bar.callCount).toEqual(0);"
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 415,
            "description": "Determines whether an object is a spy.",
            "params": [
                {
                    "name": "putativeSpy",
                    "description": "",
                    "type": "jasmine.Spy|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 425,
            "description": "Creates a more complicated spy: an Object that has every property a function that is a spy.  Used for stubbing something\nlarge in one call.",
            "params": [
                {
                    "name": "baseName",
                    "description": "name of spy class",
                    "type": "String"
                },
                {
                    "name": "methodNames",
                    "description": "array of names of methods to make spies",
                    "type": "Array"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 443,
            "description": "All parameters are pretty-printed and concatenated together, then written to the current spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 453,
            "description": "Function that installs a spy on an existing object's method name.  Used within a Spec to create a spy.",
            "example": [
                "\n// spy example\nvar foo = {\n  not: function(bool) { return !bool; }\n}\nspyOn(foo, 'not'); // actual foo.not will not be called, execution stops"
            ],
            "see": [
                "jasmine.createSpy"
            ],
            "params": [
                {
                    "name": "obj",
                    "description": ""
                },
                {
                    "name": "methodName",
                    "description": ""
                }
            ],
            "return": {
                "description": "a Jasmine spy that can be chained with all spy methods"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 473,
            "description": "Creates a Jasmine spec that will be added to the current suite.\n\n// TODO: pending tests",
            "example": [
                "\nit('should be true', function() {\n  expect(true).toEqual(true);\n});"
            ],
            "params": [
                {
                    "name": "desc",
                    "description": "description of this specification",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "defines the preconditions and expectations of the spec",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 491,
            "description": "Creates a <em>disabled</em> Jasmine spec.\n\nA convenience method that allows existing specs to be disabled temporarily during development.",
            "params": [
                {
                    "name": "desc",
                    "description": "description of this specification",
                    "type": "String"
                },
                {
                    "name": "func",
                    "description": "defines the preconditions and expectations of the spec",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 504,
            "description": "Starts a chain for a Jasmine expectation.\n\nIt is passed an Object that is the actual value and should chain to one of the many\njasmine.Matchers functions.",
            "params": [
                {
                    "name": "actual",
                    "description": "Actual value to test against and expected value",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 517,
            "description": "Defines part of a jasmine spec.  Used in cominbination with waits or waitsFor in asynchrnous specs.",
            "params": [
                {
                    "name": "func",
                    "description": "Function that defines part of a jasmine spec.",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 527,
            "description": "Waits a fixed time period before moving to the next block.",
            "deprecated": true,
            "deprecationMessage": "Use waitsFor() instead",
            "params": [
                {
                    "name": "timeout",
                    "description": "milliseconds to wait",
                    "type": "Number"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 538,
            "description": "Waits for the latchFunction to return true before proceeding to the next block.",
            "params": [
                {
                    "name": "latchFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "optional_timeoutMessage",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional_timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 550,
            "description": "A function that is called before each spec in a suite.\n\nUsed for spec setup, including validating assumptions.",
            "params": [
                {
                    "name": "beforeEachFunction",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 562,
            "description": "A function that is called after each spec in a suite.\n\nUsed for restoring any state that is hijacked during spec execution.",
            "params": [
                {
                    "name": "afterEachFunction",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 574,
            "description": "Defines a suite of specifications.\n\nStores the description and all defined specs in the Jasmine environment as one suite of specs. Variables declared\nare accessible by calls to beforeEach, it, and afterEach. Describe blocks can be nested, allowing for specialization\nof setup in some tests.",
            "example": [
                "\n// TODO: a simple suite\n\n// TODO: a simple suite with a nested describe block"
            ],
            "params": [
                {
                    "name": "description",
                    "description": "A string, usually the class under test.",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "function that defines several specs.",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 594,
            "description": "Disables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.",
            "params": [
                {
                    "name": "description",
                    "description": "A string, usually the class under test.",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "function that defines several specs.",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 633,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 638,
            "description": "Declare that a child class inherit it's prototype from the parent class.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "childClass",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "parentClass",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 646,
            "access": "private",
            "tagname": "",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 700,
            "description": "Environment for Jasmine",
            "is_constructor": 1,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 738,
            "return": {
                "description": "an object containing jasmine version build info, if set."
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 749,
            "return": {
                "description": "string containing jasmine version build info, if set."
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 766,
            "return": {
                "description": "a sequential integer starting at 0"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 773,
            "return": {
                "description": "a sequential integer starting at 0"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 780,
            "description": "Register a reporter to receive status updates from Jasmine.",
            "params": [
                {
                    "name": "reporter",
                    "description": "An object which will receive status updates.",
                    "type": "jasmine.Reporter"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 977,
            "is_constructor": 1,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1008,
            "description": "Blocks are functions with executable code that make up a spec.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "func",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "spec",
                    "description": "",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1030,
            "is_constructor": 1,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1132,
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "actual",
                    "description": ""
                },
                {
                    "name": "spec",
                    "description": "",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1209,
            "description": "toBe: compares the actual to the expected using ===",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1217,
            "description": "toNotBe: compares the actual to the expected using !==",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toBe() instead.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1226,
            "description": "toEqual: compares the actual to the expected using common sense equality. Handles Objects, Arrays, etc.",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1235,
            "description": "toNotEqual: compares the actual to the expected using the ! of jasmine.Matchers.toEqual",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toEqual() instead.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1244,
            "description": "Matcher that compares the actual to the expected using a regular expression.  Constructs a RegExp, so takes\na pattern or a String.",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1254,
            "description": "Matcher that compares the actual to the expected using the boolean inverse of jasmine.Matchers.toMatch",
            "params": [
                {
                    "name": "expected",
                    "description": ""
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toMatch() instead.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1263,
            "description": "Matcher that compares the actual to jasmine.undefined.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1270,
            "description": "Matcher that compares the actual to jasmine.undefined.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1277,
            "description": "Matcher that compares the actual to null.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1284,
            "description": "Matcher that boolean not-nots the actual.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1292,
            "description": "Matcher that boolean nots the actual.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1300,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was called.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1322,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1325,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was not called.",
            "deprecated": true,
            "deprecationMessage": "Use expect(xxx).not.toHaveBeenCalled() instead",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1349,
            "description": "Matcher that checks to see if the actual, a Jasmine spy, was called with a set of parameters.",
            "example": [
                "\n"
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1378,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1381,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1398,
            "description": "Matcher that checks that the expected item is an element in the actual Array.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1407,
            "description": "Matcher that checks that the expected item is NOT an element in the actual Array.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Object"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "as of 1.0. Use not.toContain() instead.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1425,
            "description": "Matcher that checks that the expected item is equal to the actual item\nup to a given level of decimal precision (default 2).",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1442,
            "description": "Matcher that checks that the expected exception was thrown by the actual.",
            "params": [
                {
                    "name": "expected",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1619,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1715,
            "is_constructor": 1,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1750,
            "description": "Holds results for a set of Jasmine spec. Allows for the results array to hold another jasmine.NestedResults",
            "is_constructor": 1,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1756,
            "description": "The total count of results",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1760,
            "description": "Number of passed results",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1764,
            "description": "Number of failed results",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1768,
            "description": "Was this suite/spec skipped?",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1772,
            "ignore": "",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1778,
            "description": "Roll up the result counts.",
            "params": [
                {
                    "name": "result",
                    "description": ""
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1789,
            "description": "Adds a log message.",
            "params": [
                {
                    "name": "values",
                    "description": "Array of message parts which will be concatenated later."
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1797,
            "description": "Getter for the results: message & results.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1804,
            "description": "Adds a result, tracking counts (total, passed, & failed)",
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "jasmine.ExpectationResult|jasmine.NestedResults"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1824,
            "return": {
                "description": "True if <b>everything</b> below passed",
                "type": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1830,
            "description": "Base class for pretty printing for expectation results.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 1837,
            "description": "Formats a value in a nice, human-readable string.",
            "params": [
                {
                    "name": "value",
                    "description": ""
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 2052,
            "description": "Runner",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 2129,
            "description": "Internal representation of a Jasmine specification, or test.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "suite",
                    "description": "",
                    "type": "jasmine.Suite"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 2168,
            "description": "All parameters are pretty-printed and concatenated together, then written to the spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 2191,
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "jasmine.ExpectationResult"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 2204,
            "description": "Waits a fixed time period before moving to the next block.",
            "deprecated": true,
            "deprecationMessage": "Use waitsFor() instead",
            "params": [
                {
                    "name": "timeout",
                    "description": "milliseconds to wait",
                    "type": "Number"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 2216,
            "description": "Waits for the latchFunction to return true before proceeding to the next block.",
            "params": [
                {
                    "name": "latchFunction",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "optional_timeoutMessage",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "optional_timeout",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 2372,
            "description": "Internal representation of a Jasmine suite.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "env",
                    "description": "",
                    "type": "jasmine.Env"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "specDefinitions",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "parentSuite",
                    "description": "",
                    "type": "jasmine.Suite"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js",
            "line": 2469,
            "description": "A block which waits for some condition to become true, with timeout.",
            "is_constructor": 1,
            "extends": "jasmine.Block",
            "params": [
                {
                    "name": "env",
                    "description": "The Jasmine environment.",
                    "type": "jasmine.Env"
                },
                {
                    "name": "timeout",
                    "description": "The maximum time in milliseconds to wait for the condition to become true.",
                    "type": "Number"
                },
                {
                    "name": "latchFunction",
                    "description": "A function which returns true when the desired condition has been met.",
                    "type": "Function"
                },
                {
                    "name": "message",
                    "description": "The message to display if the desired condition hasn't been met within the given time period.",
                    "type": "String"
                },
                {
                    "name": "spec",
                    "description": "The Jasmine spec.",
                    "type": "jasmine.Spec"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/knockout/spec/runner.phantom.js",
            "line": 35,
            "description": "Wait until the test condition is true or a timeout occurs. Useful for waiting\non a server response or for a ui change (fadeIn, etc.) to occur.",
            "params": [
                {
                    "name": "testFx",
                    "description": "javascript condition that evaluates to a boolean,\nit can be passed in as a string (e.g.: \"1 == 1\" or \"$('#bar').is(':visible')\" or\nas a callback function."
                },
                {
                    "name": "onReady",
                    "description": "what to do when testFx condition is fulfilled,\nit can be passed in as a string (e.g.: \"1 == 1\" or \"$('#bar').is(':visible')\" or\nas a callback function."
                },
                {
                    "name": "timeOutMillis",
                    "description": "the max amount of time to wait. If not specified, 3 sec is used."
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 9,
            "description": "Bridget makes jQuery widgets\nv1.0.1",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 35,
            "description": "adds option method -> $().plugin('option', {...})",
            "params": [
                {
                    "name": "PluginClass",
                    "description": "- constructor class",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 65,
            "description": "jQuery plugin bridge, access methods like $elem.plugin('method')",
            "params": [
                {
                    "name": "namespace",
                    "description": "- plugin name",
                    "type": "String"
                },
                {
                    "name": "PluginClass",
                    "description": "- constructor class",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 121,
            "description": "converts a Prototypical class into a proper jQuery plugin\n  the class must have a ._init method",
            "params": [
                {
                    "name": "namespace",
                    "description": "- plugin name, used in $().pluginName",
                    "type": "String"
                },
                {
                    "name": "PluginClass",
                    "description": "- constructor class",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 323,
            "description": "Finds the index of the listener for the event in it's storage array.",
            "params": [
                {
                    "name": "listeners",
                    "description": "Array of listeners to search through.",
                    "type": "Function[]"
                },
                {
                    "name": "listener",
                    "description": "Method to look for.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Index of the specified listener, -1 if not found",
                "type": "Number"
            },
            "api": "private",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 342,
            "description": "Alias a method while keeping the context correct, to allow for overwriting of target method.",
            "params": [
                {
                    "name": "name",
                    "description": "The name of the target method.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The aliased method",
                "type": "Function"
            },
            "api": "private",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 355,
            "description": "Returns the listener array for the specified event.\nWill initialise the event object and listener arrays if required.\nWill return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\nEach property in the object response is an array of listener functions.",
            "params": [
                {
                    "name": "evt",
                    "description": "Name of the event to return the listeners from.",
                    "type": "String|RegExp"
                }
            ],
            "return": {
                "description": "All listener functions for the event.",
                "type": "Function[]|Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 386,
            "description": "Takes a list of listener objects and flattens it into a list of listener functions.",
            "params": [
                {
                    "name": "listeners",
                    "description": "Raw listener objects.",
                    "type": "Object[]"
                }
            ],
            "return": {
                "description": "Just the listener functions.",
                "type": "Function[]"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 403,
            "description": "Fetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.",
            "params": [
                {
                    "name": "evt",
                    "description": "Name of the event to return the listeners from.",
                    "type": "String|RegExp"
                }
            ],
            "return": {
                "description": "All listener functions for an event in an object.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 421,
            "description": "Adds a listener function to the specified event.\nThe listener will not be added if it is a duplicate.\nIf the listener returns true then it will be removed after it is called.\nIf you pass a regular expression as the event name then the listener will be added to all events that match it.",
            "params": [
                {
                    "name": "evt",
                    "description": "Name of the event to attach the listener to.",
                    "type": "String|RegExp"
                },
                {
                    "name": "listener",
                    "description": "Method to be called when the event is emitted. If the function returns true then it will be removed after calling.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 448,
            "description": "Alias of addListener",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 453,
            "description": "Semi-alias of addListener. It will add a listener that will be\nautomatically removed after it's first execution.",
            "params": [
                {
                    "name": "evt",
                    "description": "Name of the event to attach the listener to.",
                    "type": "String|RegExp"
                },
                {
                    "name": "listener",
                    "description": "Method to be called when the event is emitted. If the function returns true then it will be removed after calling.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 468,
            "description": "Alias of addOnceListener.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 473,
            "description": "Defines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\nYou need to tell it what event names should be matched by a regex.",
            "params": [
                {
                    "name": "evt",
                    "description": "Name of the event to create.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 485,
            "description": "Uses defineEvent to define multiple events.",
            "params": [
                {
                    "name": "evts",
                    "description": "An array of event names to define.",
                    "type": "String[]"
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 498,
            "description": "Removes a listener function from the specified event.\nWhen passed a regular expression as the event name, it will remove the listener from all events that match it.",
            "params": [
                {
                    "name": "evt",
                    "description": "Name of the event to remove the listener from.",
                    "type": "String|RegExp"
                },
                {
                    "name": "listener",
                    "description": "Method to remove from the event.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 524,
            "description": "Alias of removeListener",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 529,
            "description": "Adds listeners in bulk using the manipulateListeners method.\nIf you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\nYou can also pass it a regular expression to add the array of listeners to all events that match it.\nYeah, this function does quite a bit. That's probably a bad thing.",
            "params": [
                {
                    "name": "evt",
                    "description": "An event name if you will pass an array of listeners next. An object if you wish to add to multiple events at once.",
                    "type": "String|Object|RegExp"
                },
                {
                    "name": "listeners",
                    "description": "An optional array of listener functions to add.",
                    "type": "Function[]",
                    "optional": true
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 544,
            "description": "Removes listeners in bulk using the manipulateListeners method.\nIf you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\nYou can also pass it an event name and an array of listeners to be removed.\nYou can also pass it a regular expression to remove the listeners from all events that match it.",
            "params": [
                {
                    "name": "evt",
                    "description": "An event name if you will pass an array of listeners next. An object if you wish to remove from multiple events at once.",
                    "type": "String|Object|RegExp"
                },
                {
                    "name": "listeners",
                    "description": "An optional array of listener functions to remove.",
                    "type": "Function[]",
                    "optional": true
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 559,
            "description": "Edits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\nThe first argument will determine if the listeners are removed (true) or added (false).\nIf you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\nYou can also pass it an event name and an array of listeners to be added/removed.\nYou can also pass it a regular expression to manipulate the listeners of all events that match it.",
            "params": [
                {
                    "name": "remove",
                    "description": "True if you want to remove listeners, false if you want to add.",
                    "type": "Boolean"
                },
                {
                    "name": "evt",
                    "description": "An event name if you will pass an array of listeners next. An object if you wish to add/remove from multiple events at once.",
                    "type": "String|Object|RegExp"
                },
                {
                    "name": "listeners",
                    "description": "An optional array of listener functions to add/remove.",
                    "type": "Function[]",
                    "optional": true
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 605,
            "description": "Removes all listeners from a specified event.\nIf you do not specify an event then all listeners will be removed.\nThat means every event will be emptied.\nYou can also pass a regex to remove all events that match it.",
            "params": [
                {
                    "name": "evt",
                    "description": "Optional name of the event to remove all listeners for. Will remove from every event if not passed.",
                    "type": "String|RegExp",
                    "optional": true
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 640,
            "description": "Alias of removeEvent.\n\nAdded to mirror the node API.",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 647,
            "description": "Emits an event of your choice.\nWhen emitted, every listener attached to that event will be executed.\nIf you pass the optional argument array then those arguments will be passed to every listener upon execution.\nBecause it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\nSo they will not arrive within the array on the other side, they will be separate.\nYou can also pass a regular expression to emit to all events that match it.",
            "params": [
                {
                    "name": "evt",
                    "description": "Name of the event to emit and execute listeners for.",
                    "type": "String|RegExp"
                },
                {
                    "name": "args",
                    "description": "Optional array of arguments to be passed to each listener.",
                    "type": "Array",
                    "optional": true
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 691,
            "description": "Alias of emitEvent",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 696,
            "description": "Subtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\nAs with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.",
            "params": [
                {
                    "name": "evt",
                    "description": "Name of the event to emit and execute listeners for.",
                    "type": "String|RegExp"
                },
                {
                    "name": "Optional",
                    "description": "additional arguments to be passed to each listener.",
                    "type": "...*"
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 709,
            "description": "Sets the current value to check against when executing listeners. If a\nlisteners return value matches the one set here then it will be removed\nafter execution. This value defaults to true.",
            "params": [
                {
                    "name": "value",
                    "description": "The new value to check for when executing listeners.",
                    "type": "*"
                }
            ],
            "return": {
                "description": "Current instance of EventEmitter for chaining.",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 722,
            "description": "Fetches the current value to check against when executing listeners. If\nthe listeners return value matches this one then it should be removed\nautomatically. It will return true by default.",
            "return": {
                "description": "The current value to check for or the default, true.",
                "type": "*|Boolean"
            },
            "api": "private",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 739,
            "description": "Fetches the events object and creates one if required.",
            "return": {
                "description": "The events storage object.",
                "type": "Object"
            },
            "api": "private",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 749,
            "description": "Reverts the global {@link EventEmitter} to its previous value and returns a reference to this version.",
            "return": {
                "description": "Non conflicting EventEmitter class.",
                "type": "Function"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 828,
            "description": "getSize v1.1.7\nmeasure size of elements",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 901,
            "description": "WebKit measures the outer-width on style.width on border-box elems\nIE & Firefox measures the inner-width",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1043,
            "description": "matchesSelector helper v1.0.1",
            "name": "matchesSelector",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1146,
            "description": "Outlayer Item",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1274,
            "description": "apply CSS styles to element",
            "params": [
                {
                    "name": "style",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1401,
            "params": [
                {
                    "name": "style",
                    "description": "- CSS",
                    "type": "Object"
                },
                {
                    "name": "onTransitionEnd",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1417,
            "description": "proper transition",
            "params": [
                {
                    "name": "args",
                    "description": "- arguments",
                    "type": "Object"
                },
                {
                    "name": "to",
                    "description": "- style to transition to",
                    "type": "Object"
                },
                {
                    "name": "from",
                    "description": "- style to start transition from",
                    "type": "Object"
                },
                {
                    "name": "isCleaning",
                    "description": "- removes transition styles after transition",
                    "type": "Boolean"
                },
                {
                    "name": "onTransitionEnd",
                    "description": "- callback",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1548,
            "description": "removes style property from element",
            "params": [
                {
                    "name": "style",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1769,
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element, String"
                },
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1836,
            "description": "set options",
            "params": [
                {
                    "name": "opts",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1866,
            "description": "turn elements into Outlayer.Items to be used in layout",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "Array or NodeList or HTMLElement"
                }
            ],
            "return": {
                "description": "items - collection of new Outlayer Items",
                "type": "Array"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1887,
            "description": "get item elements to be used in layout",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "Array or NodeList or HTMLElement"
                }
            ],
            "return": {
                "description": "items - item elements",
                "type": "Array"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1924,
            "description": "getter method for getting item elements",
            "return": {
                "description": "elems - collection of item elements",
                "type": "Array"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1938,
            "description": "lays out all items",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1957,
            "description": "logic before any new layout",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1969,
            "description": "get measurement from option, for columnWidth, rowHeight, gutter\nif option is String -> get element from selector string, & get size of element\nif option is Element -> get size of element\nelse use option as a number",
            "params": [
                {
                    "name": "measurement",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "size",
                    "description": "- width or height",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 1997,
            "description": "layout a collection of item elements",
            "api": "public",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2009,
            "description": "get the items to be laid out\nyou may want to skip over some items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "items",
                "type": "Array"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2026,
            "description": "layout items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "isInstant",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2061,
            "description": "get item layout position",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Outlayer.Item"
                }
            ],
            "return": {
                "description": "x and y position",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2073,
            "description": "iterate over array and position each item\nReason being - separating this logic prevents 'layout invalidation'\nthx @paul_irish",
            "params": [
                {
                    "name": "queue",
                    "description": "",
                    "type": "Array"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2086,
            "description": "Sets position of item in DOM",
            "params": [
                {
                    "name": "item",
                    "description": "",
                    "type": "Outlayer.Item"
                },
                {
                    "name": "x",
                    "description": "- horizontal position",
                    "type": "Number"
                },
                {
                    "name": "y",
                    "description": "- vertical position",
                    "type": "Number"
                },
                {
                    "name": "isInstant",
                    "description": "- disables transitions",
                    "type": "Boolean"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2102,
            "description": "Any logic you want to do after each layout,\ni.e. size the container",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2121,
            "description": "Sets width or height of container if returned",
            "return": {
                "description": "size",
                "type": "Object"
            },
            "params": [
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "height",
                    "description": "",
                    "type": "Number"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2129,
            "params": [
                {
                    "name": "measure",
                    "description": "- size of width or height",
                    "type": "Number"
                },
                {
                    "name": "isWidth",
                    "description": "",
                    "type": "Boolean"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2151,
            "description": "trigger a callback for a collection of items events",
            "params": [
                {
                    "name": "items",
                    "description": "- Outlayer.Items",
                    "type": "Array"
                },
                {
                    "name": "eventName",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2179,
            "description": "keep item in collection, but do not lay it out\nignored items do not get skipped in layout",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2191,
            "description": "return item to layout collection",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2202,
            "description": "adds elements to stamps",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "NodeList, Array, Element, or String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2220,
            "description": "removes elements to stamps",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "NodeList, Array, or Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2239,
            "description": "finds child elements",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "NodeList, Array, Element, or String"
                }
            ],
            "return": {
                "description": "elems",
                "type": "Array"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2282,
            "params": [
                {
                    "name": "stamp",
                    "description": "",
                    "type": "Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2287,
            "description": "get x/y position of element relative to container element",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "offset - has left, top, right, bottom",
                "type": "Object"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2316,
            "description": "Bind layout to window resizing",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2328,
            "description": "Unbind layout to window resizing",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2368,
            "description": "check if layout is needed post layout",
            "return": {
                "description": "Boolean"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2382,
            "description": "add items to Outlayer instance",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "Array or NodeList or Element"
                }
            ],
            "return": {
                "description": "items - Outlayer.Items",
                "type": "Array"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2396,
            "description": "Layout newly-appended item elements",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "Array or NodeList or Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2410,
            "description": "Layout prepended elements",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "Array or NodeList or Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2432,
            "description": "reveal a collection of items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Array of Outlayer.Items"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2447,
            "description": "hide a collection of items",
            "params": [
                {
                    "name": "items",
                    "description": "",
                    "type": "Array of Outlayer.Items"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2462,
            "description": "get Outlayer.Item, given an Element",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "item",
                "type": "Outlayer.Item"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2479,
            "description": "get collection of Outlayer.Items, given Elements",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "items - Outlayer.Items",
                "type": "Array"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2500,
            "description": "remove element(s) from instance and DOM",
            "params": [
                {
                    "name": "elems",
                    "description": "",
                    "type": "Array or NodeList or Element"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2552,
            "description": "get Outlayer instance from element",
            "params": [
                {
                    "name": "elem",
                    "description": "",
                    "type": "Element"
                }
            ],
            "return": {
                "description": "",
                "type": "Outlayer"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2565,
            "description": "create a layout class",
            "params": [
                {
                    "name": "namespace",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2602,
            "description": "allow user to initialize Outlayer via .js-namespace class\noptions are parsed from data-namespace-option attribute",
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/dist/masonry.pkgd.js",
            "line": 2789,
            "params": [
                {
                    "name": "colSpan",
                    "description": "- number of columns the element spans",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "colGroup",
                "type": "Array"
            },
            "class": "EventEmitter Manages event registering and emitting.",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/examples/js/masonry-v2-shim.js",
            "line": 1,
            "description": "Masonry v2 shim\nto maintain backwards compatibility",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/masonry/masonry.js",
            "line": 109,
            "params": [
                {
                    "name": "colSpan",
                    "description": "- number of columns the element spans",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "colGroup",
                "type": "Array"
            },
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/components/stickem/jquery.stickem.js",
            "line": 1,
            "name": "jQuery Stick 'em",
            "author": "Trevor Davis",
            "version": "1.4.1\n\n\t$('.container').stickem({\n\t\titem: '.stickem',\n\t\tcontainer: '.stickem-container',\n\t\tstickClass: 'stickit',\n\t\tendStickClass: 'stickit-end',\n\t\toffset: 0,\n\t\tonStick: null,\n\t\tonUnstick: null\n\t});",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/kriswallsmith/assetic/tests/Assetic/Test/Filter/fixtures/packer/example.js",
            "line": 1,
            "description": "Example function",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/kriswallsmith/assetic/tests/Assetic/Test/Filter/fixtures/uglifyjs/script.js",
            "line": 1,
            "description": "Copyright",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1,
            "license": "RequireJS 2.1.5 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\nAvailable via the MIT or new BSD license.\nsee: http://github.com/jrburke/requirejs for details",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 49,
            "description": "Helper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 64,
            "description": "Helper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 87,
            "description": "Cycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 103,
            "description": "Simple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 150,
            "description": "Constructs an error with a pointer to an URL with more information.",
            "params": [
                {
                    "name": "id",
                    "description": "the error ID that maps to an ID on a web page.",
                    "type": "String"
                },
                {
                    "name": "message",
                    "description": "human readable error.",
                    "type": "String"
                },
                {
                    "name": "err",
                    "description": "the original error, if there is one.",
                    "type": "Error",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Error"
            },
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 216,
            "description": "Trims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "params": [
                {
                    "name": "ary",
                    "description": "the array of path segments.",
                    "type": "Array"
                }
            ],
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 249,
            "description": "Given a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "params": [
                {
                    "name": "name",
                    "description": "the relative name",
                    "type": "String"
                },
                {
                    "name": "baseName",
                    "description": "a real name that the name arg is relative\nto.",
                    "type": "String"
                },
                {
                    "name": "applyMap",
                    "description": "apply the map config to the value. Should\nonly be done if this normalization is for a dependency ID.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "normalized name",
                "type": "String"
            },
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 395,
            "description": "Creates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "params": [
                {
                    "name": "name",
                    "description": "the module name",
                    "type": "String"
                },
                {
                    "name": "parentModuleMap",
                    "description": "parent module map\nfor the module name, used to resolve relative names.",
                    "type": "String",
                    "optional": true
                },
                {
                    "name": "isNormalized:",
                    "description": "is the ID already normalized.\nThis is true if this call is done for a define() module ID.",
                    "type": "Boolean"
                },
                {
                    "name": "applyMap:",
                    "description": "apply the map config to the ID.\nShould only be true if this map is for a dependency.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 532,
            "description": "Internal method to transfer globalQueue items to this context's\ndefQueue.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 814,
            "description": "Checks if the module is ready to define itself, and if so,\ndefine it.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1168,
            "description": "Given an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "params": [
                {
                    "name": "evt",
                    "description": "",
                    "type": "Event"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1221,
            "description": "Set a configuration for the context.",
            "params": [
                {
                    "name": "cfg",
                    "description": "config object to integrate.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1405,
            "description": "Converts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1467,
            "description": "Called to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1480,
            "description": "Internal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "params": [
                {
                    "name": "moduleName",
                    "description": "the name of the module to potentially complete.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1536,
            "description": "Converts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1607,
            "description": "Executes a module callack function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "access": "private",
            "tagname": "",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1618,
            "description": "callback for script loads, used to check status of loading.",
            "params": [
                {
                    "name": "evt",
                    "description": "the event from the browser for the script\nthat was loaded.",
                    "type": "Event"
                }
            ],
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1640,
            "description": "Callback for script errors.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1655,
            "description": "Main entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1705,
            "description": "Support require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1713,
            "description": "Execute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "params": [
                {
                    "name": "fn",
                    "description": "function to execute later.",
                    "type": "Function"
                }
            ],
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1723,
            "description": "Export require as a global, but only if it does not already exist.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1770,
            "description": "Any errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "params": [
                {
                    "name": "err",
                    "description": "the error object.",
                    "type": "Error"
                }
            ],
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1779,
            "description": "Does the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "params": [
                {
                    "name": "context",
                    "description": "the require context to find state.",
                    "type": "Object"
                },
                {
                    "name": "moduleName",
                    "description": "the name of the module.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "the URL to the module.",
                    "type": "Object"
                }
            ],
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 1933,
            "description": "The function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js",
            "line": 2006,
            "description": "Executes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "params": [
                {
                    "name": "text",
                    "description": "the text to execute/evaluate.",
                    "type": "String"
                }
            ],
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/tests/ComponentInstaller/Test/Resources/test.js",
            "line": 1,
            "description": "This is a JavaScript test file.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "vendor/libraries/robloach/component-installer/tests/ComponentInstaller/Test/Resources/test2.js",
            "line": 1,
            "description": "This is a JavaScript test2 file.",
            "class": "",
            "module": "SCMF"
        },
        {
            "file": "gruntfile.js",
            "line": 1,
            "description": "Build script for UsabilityDynamics SCMF",
            "class": "",
            "module": "SCMF"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " application/static/scripts/src/lib/masonry.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " application/static/scripts/src/lib/swipe.js:10"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery-built.js:841"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery-built.js:905"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery-built.js:978"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery-built.js:990"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery-built.js:1002"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery.js:841"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery.js:905"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery.js:978"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery.js:990"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/jquery/jquery.js:1002"
        },
        {
            "message": "unknown tag: name",
            "line": " vendor/components/stickem/jquery.stickem.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " vendor/components/stickem/jquery.stickem.js:1"
        },
        {
            "message": "unknown tag: name",
            "line": " vendor/components/stickem/stickem-built.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " vendor/components/stickem/stickem-built.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " vendor/components/require-built.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require-built.js:150"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require-built.js:249"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require-built.js:395"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require-built.js:1168"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require-built.js:4925"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require-built.js:4989"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require-built.js:5062"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require-built.js:5074"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require-built.js:5086"
        },
        {
            "message": "unknown tag: name",
            "line": " vendor/components/require-built.js:13312"
        },
        {
            "message": "unknown tag: version",
            "line": " vendor/components/require-built.js:13312"
        },
        {
            "message": "unknown tag: license",
            "line": " vendor/components/require.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require.js:150"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require.js:249"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require.js:395"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/components/require.js:1168"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/jquery/jquery.js:841"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/jquery/jquery.js:905"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/jquery/jquery.js:978"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/jquery/jquery.js:990"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/jquery/jquery.js:1002"
        },
        {
            "message": "unknown tag: ignore",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:50"
        },
        {
            "message": "unknown tag: ignore",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:122"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:122"
        },
        {
            "message": "unknown tag: ignore",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:132"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:132"
        },
        {
            "message": "unknown tag: ignore",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:142"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:142"
        },
        {
            "message": "unknown tag: ignore",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:152"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:163"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:175"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:185"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:199"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:415"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:453"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:738"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:749"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:766"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:773"
        },
        {
            "message": "unknown tag: ignore",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1772"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1824"
        },
        {
            "message": "unknown tag: api",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:323"
        },
        {
            "message": "unknown tag: api",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:342"
        },
        {
            "message": "unknown tag: api",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:722"
        },
        {
            "message": "unknown tag: api",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:739"
        },
        {
            "message": "unknown tag: name",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1043"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1866"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1887"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1924"
        },
        {
            "message": "unknown tag: api",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1997"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2009"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2061"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2121"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2239"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2287"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2368"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2382"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2462"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2479"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2552"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2789"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/components/masonry/masonry.js:109"
        },
        {
            "message": "unknown tag: name",
            "line": " vendor/libraries/components/stickem/jquery.stickem.js:1"
        },
        {
            "message": "unknown tag: version",
            "line": " vendor/libraries/components/stickem/jquery.stickem.js:1"
        },
        {
            "message": "unknown tag: license",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:150"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:249"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:395"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1168"
        },
        {
            "message": "Missing item type\nOptions object. Only the URI and strictMode values can be changed via the setters below.",
            "line": " puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js:1278"
        },
        {
            "message": "Missing item type\nDeals with the parsing of the URI according to the regex above.\nWritten by Steven Levithan - see credits at top.",
            "line": " puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js:1301"
        },
        {
            "message": "Missing item type\nReturns the value of the passed in key from the parsed URI.",
            "line": " puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js:1327"
        },
        {
            "message": "Missing item type\nReturns the value of the required query string parameter.",
            "line": " puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js:1353"
        },
        {
            "message": "Missing item type\n'Constructor' (not really!) function.\n Called whenever the URI changes to kick off re-parsing of the URI and splitting it up into segments.",
            "line": " puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js:1367"
        },
        {
            "message": "Missing item type\nSplits up the body of the URI into segments (i.e. sections delimited by '/')",
            "line": " puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js:1378"
        },
        {
            "message": "Missing item type\nSets the parsing mode - either strict or loose. Set to loose by default.",
            "line": " puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js:1390"
        },
        {
            "message": "Missing item type\nSets URI to parse if you don't want to to parse the current page's URI.\nCalling the function with no value for newUri resets it to the current page's URI.",
            "line": " puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js:1401"
        },
        {
            "message": "Missing item type\nReturns the value of the specified URI segment. Segments are numbered from 1 to the number of segments.\nFor example the URI http://test.com/about/company/ segment(1) would return 'about'.\n\nIf no integer is passed into the function it returns the number of segments in the URI.",
            "line": " puphpet/puppet/modules/stdlib/spec/unit/facter/coverage/assets/0.8.0/application.js:1414"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " vendor/components/jquery/jquery-built.js:841"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " vendor/components/jquery/jquery-built.js:861"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " vendor/components/jquery/jquery-built.js:870"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " vendor/components/jquery/jquery-built.js:891"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " vendor/components/jquery/jquery-built.js:905"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " vendor/components/jquery/jquery-built.js:934"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " vendor/components/jquery/jquery-built.js:945"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " vendor/components/jquery/jquery-built.js:956"
        },
        {
            "message": "Missing item type\nChecks a node for validity as a Sizzle context",
            "line": " vendor/components/jquery/jquery-built.js:978"
        },
        {
            "message": "Missing item type\nDetects XML nodes",
            "line": " vendor/components/jquery/jquery-built.js:990"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " vendor/components/jquery/jquery-built.js:1002"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " vendor/components/jquery/jquery-built.js:1432"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " vendor/components/jquery/jquery-built.js:1465"
        },
        {
            "message": "Missing item type\nThe ready event handler and self cleanup method",
            "line": " vendor/components/jquery/jquery-built.js:3374"
        },
        {
            "message": "Missing item type\nDetermines whether an object can have data",
            "line": " vendor/components/jquery/jquery-built.js:3467"
        },
        {
            "message": "Missing item type\nRetrieve the actual display of a element",
            "line": " vendor/components/jquery/jquery-built.js:5408"
        },
        {
            "message": "Missing item type\nTry to determine the default display value of an element",
            "line": " vendor/components/jquery/jquery-built.js:5431"
        },
        {
            "message": "Missing item type\nLoad a url into a page",
            "line": " vendor/components/jquery/jquery-built.js:8750"
        },
        {
            "message": "Missing item type\nGets a window from an element",
            "line": " vendor/components/jquery/jquery-built.js:8824"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " vendor/components/jquery/jquery.js:841"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " vendor/components/jquery/jquery.js:861"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " vendor/components/jquery/jquery.js:870"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " vendor/components/jquery/jquery.js:891"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " vendor/components/jquery/jquery.js:905"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " vendor/components/jquery/jquery.js:934"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " vendor/components/jquery/jquery.js:945"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " vendor/components/jquery/jquery.js:956"
        },
        {
            "message": "Missing item type\nChecks a node for validity as a Sizzle context",
            "line": " vendor/components/jquery/jquery.js:978"
        },
        {
            "message": "Missing item type\nDetects XML nodes",
            "line": " vendor/components/jquery/jquery.js:990"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " vendor/components/jquery/jquery.js:1002"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " vendor/components/jquery/jquery.js:1432"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " vendor/components/jquery/jquery.js:1465"
        },
        {
            "message": "Missing item type\nThe ready event handler and self cleanup method",
            "line": " vendor/components/jquery/jquery.js:3374"
        },
        {
            "message": "Missing item type\nDetermines whether an object can have data",
            "line": " vendor/components/jquery/jquery.js:3467"
        },
        {
            "message": "Missing item type\nRetrieve the actual display of a element",
            "line": " vendor/components/jquery/jquery.js:5408"
        },
        {
            "message": "Missing item type\nTry to determine the default display value of an element",
            "line": " vendor/components/jquery/jquery.js:5431"
        },
        {
            "message": "Missing item type\nLoad a url into a page",
            "line": " vendor/components/jquery/jquery.js:8750"
        },
        {
            "message": "Missing item type\nGets a window from an element",
            "line": " vendor/components/jquery/jquery.js:8824"
        },
        {
            "message": "Missing item type",
            "line": " vendor/components/stickem/jquery.stickem.js:1"
        },
        {
            "message": "Missing item type",
            "line": " vendor/components/stickem/stickem-built.js:1"
        },
        {
            "message": "Missing item type",
            "line": " vendor/components/require-built.js:1"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "line": " vendor/components/require-built.js:49"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "line": " vendor/components/require-built.js:64"
        },
        {
            "message": "Missing item type\nCycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "line": " vendor/components/require-built.js:87"
        },
        {
            "message": "Missing item type\nSimple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "line": " vendor/components/require-built.js:103"
        },
        {
            "message": "Missing item type\nConstructs an error with a pointer to an URL with more information.",
            "line": " vendor/components/require-built.js:150"
        },
        {
            "message": "Missing item type\nTrims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "line": " vendor/components/require-built.js:216"
        },
        {
            "message": "Missing item type\nGiven a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "line": " vendor/components/require-built.js:249"
        },
        {
            "message": "Missing item type\nCreates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "line": " vendor/components/require-built.js:395"
        },
        {
            "message": "Missing item type\nInternal method to transfer globalQueue items to this context's\ndefQueue.",
            "line": " vendor/components/require-built.js:532"
        },
        {
            "message": "Missing item type\nChecks if the module is ready to define itself, and if so,\ndefine it.",
            "line": " vendor/components/require-built.js:814"
        },
        {
            "message": "Missing item type\nGiven an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "line": " vendor/components/require-built.js:1168"
        },
        {
            "message": "Missing item type\nSet a configuration for the context.",
            "line": " vendor/components/require-built.js:1221"
        },
        {
            "message": "Missing item type\nConverts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "line": " vendor/components/require-built.js:1405"
        },
        {
            "message": "Missing item type\nCalled to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "line": " vendor/components/require-built.js:1467"
        },
        {
            "message": "Missing item type\nInternal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "line": " vendor/components/require-built.js:1480"
        },
        {
            "message": "Missing item type\nConverts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "line": " vendor/components/require-built.js:1536"
        },
        {
            "message": "Missing item type\nExecutes a module callack function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "line": " vendor/components/require-built.js:1607"
        },
        {
            "message": "Missing item type\ncallback for script loads, used to check status of loading.",
            "line": " vendor/components/require-built.js:1618"
        },
        {
            "message": "Missing item type\nCallback for script errors.",
            "line": " vendor/components/require-built.js:1640"
        },
        {
            "message": "Missing item type\nMain entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "line": " vendor/components/require-built.js:1655"
        },
        {
            "message": "Missing item type\nSupport require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "line": " vendor/components/require-built.js:1705"
        },
        {
            "message": "Missing item type\nExecute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "line": " vendor/components/require-built.js:1713"
        },
        {
            "message": "Missing item type\nExport require as a global, but only if it does not already exist.",
            "line": " vendor/components/require-built.js:1723"
        },
        {
            "message": "Missing item type\nAny errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "line": " vendor/components/require-built.js:1770"
        },
        {
            "message": "Missing item type\nDoes the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "line": " vendor/components/require-built.js:1779"
        },
        {
            "message": "Missing item type\nThe function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "line": " vendor/components/require-built.js:1933"
        },
        {
            "message": "Missing item type\nExecutes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "line": " vendor/components/require-built.js:2006"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " vendor/components/require-built.js:4925"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " vendor/components/require-built.js:4945"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " vendor/components/require-built.js:4954"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " vendor/components/require-built.js:4975"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " vendor/components/require-built.js:4989"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " vendor/components/require-built.js:5018"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " vendor/components/require-built.js:5029"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " vendor/components/require-built.js:5040"
        },
        {
            "message": "Missing item type\nChecks a node for validity as a Sizzle context",
            "line": " vendor/components/require-built.js:5062"
        },
        {
            "message": "Missing item type\nDetects XML nodes",
            "line": " vendor/components/require-built.js:5074"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " vendor/components/require-built.js:5086"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " vendor/components/require-built.js:5516"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " vendor/components/require-built.js:5549"
        },
        {
            "message": "Missing item type\nThe ready event handler and self cleanup method",
            "line": " vendor/components/require-built.js:7458"
        },
        {
            "message": "Missing item type\nDetermines whether an object can have data",
            "line": " vendor/components/require-built.js:7551"
        },
        {
            "message": "Missing item type\nRetrieve the actual display of a element",
            "line": " vendor/components/require-built.js:9492"
        },
        {
            "message": "Missing item type\nTry to determine the default display value of an element",
            "line": " vendor/components/require-built.js:9515"
        },
        {
            "message": "Missing item type\nLoad a url into a page",
            "line": " vendor/components/require-built.js:12834"
        },
        {
            "message": "Missing item type\nGets a window from an element",
            "line": " vendor/components/require-built.js:12908"
        },
        {
            "message": "Missing item type",
            "line": " vendor/components/require-built.js:13312"
        },
        {
            "message": "Missing item type",
            "line": " vendor/components/require.js:1"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "line": " vendor/components/require.js:49"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "line": " vendor/components/require.js:64"
        },
        {
            "message": "Missing item type\nCycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "line": " vendor/components/require.js:87"
        },
        {
            "message": "Missing item type\nSimple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "line": " vendor/components/require.js:103"
        },
        {
            "message": "Missing item type\nConstructs an error with a pointer to an URL with more information.",
            "line": " vendor/components/require.js:150"
        },
        {
            "message": "Missing item type\nTrims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "line": " vendor/components/require.js:216"
        },
        {
            "message": "Missing item type\nGiven a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "line": " vendor/components/require.js:249"
        },
        {
            "message": "Missing item type\nCreates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "line": " vendor/components/require.js:395"
        },
        {
            "message": "Missing item type\nInternal method to transfer globalQueue items to this context's\ndefQueue.",
            "line": " vendor/components/require.js:532"
        },
        {
            "message": "Missing item type\nChecks if the module is ready to define itself, and if so,\ndefine it.",
            "line": " vendor/components/require.js:814"
        },
        {
            "message": "Missing item type\nGiven an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "line": " vendor/components/require.js:1168"
        },
        {
            "message": "Missing item type\nSet a configuration for the context.",
            "line": " vendor/components/require.js:1221"
        },
        {
            "message": "Missing item type\nConverts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "line": " vendor/components/require.js:1405"
        },
        {
            "message": "Missing item type\nCalled to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "line": " vendor/components/require.js:1467"
        },
        {
            "message": "Missing item type\nInternal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "line": " vendor/components/require.js:1480"
        },
        {
            "message": "Missing item type\nConverts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "line": " vendor/components/require.js:1536"
        },
        {
            "message": "Missing item type\nExecutes a module callack function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "line": " vendor/components/require.js:1607"
        },
        {
            "message": "Missing item type\ncallback for script loads, used to check status of loading.",
            "line": " vendor/components/require.js:1618"
        },
        {
            "message": "Missing item type\nCallback for script errors.",
            "line": " vendor/components/require.js:1640"
        },
        {
            "message": "Missing item type\nMain entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "line": " vendor/components/require.js:1655"
        },
        {
            "message": "Missing item type\nSupport require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "line": " vendor/components/require.js:1705"
        },
        {
            "message": "Missing item type\nExecute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "line": " vendor/components/require.js:1713"
        },
        {
            "message": "Missing item type\nExport require as a global, but only if it does not already exist.",
            "line": " vendor/components/require.js:1723"
        },
        {
            "message": "Missing item type\nAny errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "line": " vendor/components/require.js:1770"
        },
        {
            "message": "Missing item type\nDoes the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "line": " vendor/components/require.js:1779"
        },
        {
            "message": "Missing item type\nThe function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "line": " vendor/components/require.js:1933"
        },
        {
            "message": "Missing item type\nExecutes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "line": " vendor/components/require.js:2006"
        },
        {
            "message": "Missing item type\nCreate key-value caches of limited size",
            "line": " vendor/libraries/components/jquery/jquery.js:841"
        },
        {
            "message": "Missing item type\nMark a function for special use by Sizzle",
            "line": " vendor/libraries/components/jquery/jquery.js:861"
        },
        {
            "message": "Missing item type\nSupport testing using an element",
            "line": " vendor/libraries/components/jquery/jquery.js:870"
        },
        {
            "message": "Missing item type\nAdds the same handler for all of the specified attrs",
            "line": " vendor/libraries/components/jquery/jquery.js:891"
        },
        {
            "message": "Missing item type\nChecks document order of two siblings",
            "line": " vendor/libraries/components/jquery/jquery.js:905"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for input types",
            "line": " vendor/libraries/components/jquery/jquery.js:934"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for buttons",
            "line": " vendor/libraries/components/jquery/jquery.js:945"
        },
        {
            "message": "Missing item type\nReturns a function to use in pseudos for positionals",
            "line": " vendor/libraries/components/jquery/jquery.js:956"
        },
        {
            "message": "Missing item type\nChecks a node for validity as a Sizzle context",
            "line": " vendor/libraries/components/jquery/jquery.js:978"
        },
        {
            "message": "Missing item type\nDetects XML nodes",
            "line": " vendor/libraries/components/jquery/jquery.js:990"
        },
        {
            "message": "Missing item type\nSets document-related variables once based on the current document",
            "line": " vendor/libraries/components/jquery/jquery.js:1002"
        },
        {
            "message": "Missing item type\nDocument sorting and removing duplicates",
            "line": " vendor/libraries/components/jquery/jquery.js:1432"
        },
        {
            "message": "Missing item type\nUtility function for retrieving the text value of an array of DOM nodes",
            "line": " vendor/libraries/components/jquery/jquery.js:1465"
        },
        {
            "message": "Missing item type\nThe ready event handler and self cleanup method",
            "line": " vendor/libraries/components/jquery/jquery.js:3374"
        },
        {
            "message": "Missing item type\nDetermines whether an object can have data",
            "line": " vendor/libraries/components/jquery/jquery.js:3467"
        },
        {
            "message": "Missing item type\nRetrieve the actual display of a element",
            "line": " vendor/libraries/components/jquery/jquery.js:5408"
        },
        {
            "message": "Missing item type\nTry to determine the default display value of an element",
            "line": " vendor/libraries/components/jquery/jquery.js:5431"
        },
        {
            "message": "Missing item type\nLoad a url into a page",
            "line": " vendor/libraries/components/jquery/jquery.js:8750"
        },
        {
            "message": "Missing item type\nGets a window from an element",
            "line": " vendor/libraries/components/jquery/jquery.js:8824"
        },
        {
            "message": "Missing item type\nTAP (http://en.wikipedia.org/wiki/Test_Anything_Protocol) reporter.\noutputs spec results to the console.\n\nHeavily inspired by ConsoleReporter found at:\nhttps://github.com/larrymyers/jasmine-reporters/\n\nUsage:\n\njasmine.getEnv().addReporter(new jasmine.TapReporter());\njasmine.getEnv().execute();",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine-tap.js:9"
        },
        {
            "message": "Missing item type\nTop level namespace for Jasmine, a lightweight JavaScript BDD/spec/testing framework.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:3"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:10"
        },
        {
            "message": "Missing item type\nUse <code>jasmine.undefined</code> instead of <code>undefined</code>, since <code>undefined</code> is just\na plain old variable and may be redefined by somebody else.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:17"
        },
        {
            "message": "Missing item type\nShow diagnostic messages in the console if set to true",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:25"
        },
        {
            "message": "Missing item type\nDefault interval in milliseconds for event loop yields (e.g. to allow network activity or to refresh the screen with the HTML-based runner). Small values here may result in slow test running. Zero means no updates until all tests have completed.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:31"
        },
        {
            "message": "Missing item type\nDefault timeout interval in milliseconds for waitsFor() blocks.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:37"
        },
        {
            "message": "Missing item type\nAllows for bound functions to be compared.  Internal use only.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:50"
        },
        {
            "message": "Missing item type\nGetter for the Jasmine environment. Ensures one gets created",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:114"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:122"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:132"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:142"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:152"
        },
        {
            "message": "Missing item type\nPretty printer for expecations.  Takes any object and turns it into a human-readable string.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:163"
        },
        {
            "message": "Missing item type\nReturns true if the object is a DOM Node.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:175"
        },
        {
            "message": "Missing item type\nReturns a matchable 'generic' object of the class type.  For use in expecations of type when values don't matter.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:185"
        },
        {
            "message": "Missing item type\nReturns a matchable subset of a JSON object. For use in expectations when you don't care about all of the\nattributes on the object.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:199"
        },
        {
            "message": "Missing item type\nJasmine Spies are test doubles that can act as stubs, spies, fakes or when used in an expecation, mocks.\n\nSpies should be created in test setup, before expectations.  They can then be checked, using the standard Jasmine\nexpectation syntax. Spies can be checked if they were called or not and what the calling params were.\n\nA Spy has the following fields: wasCalled, callCount, mostRecentCall, and argsForCall (see docs).\n\nSpies are torn down at the end of every spec.\n\nNote: Do <b>not</b> call new jasmine.Spy() directly - a spy must be created using spyOn, jasmine.createSpy or jasmine.createSpyObj.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:214"
        },
        {
            "message": "Missing item type\nThe name of the spy, if provided.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:259"
        },
        {
            "message": "Missing item type\nIs this Object a spy?",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:263"
        },
        {
            "message": "Missing item type\nThe actual function this spy stubs.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:267"
        },
        {
            "message": "Missing item type\nTracking of the most recent call to the spy.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:272"
        },
        {
            "message": "Missing item type\nHolds arguments for each call to the spy, indexed by call count",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:281"
        },
        {
            "message": "Missing item type\nTells a spy to call through to the actual implemenatation.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:295"
        },
        {
            "message": "Missing item type\nFor setting the return value of a spy.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:311"
        },
        {
            "message": "Missing item type\nFor throwing an exception when a spy is called.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:330"
        },
        {
            "message": "Missing item type\nCalls an alternate implementation when a spy is called.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:349"
        },
        {
            "message": "Missing item type\nResets all of a spy's the tracking variables so that it can be used again.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:369"
        },
        {
            "message": "Missing item type\nDetermines whether an object is a spy.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:415"
        },
        {
            "message": "Missing item type\nCreates a more complicated spy: an Object that has every property a function that is a spy.  Used for stubbing something\nlarge in one call.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:425"
        },
        {
            "message": "Missing item type\nAll parameters are pretty-printed and concatenated together, then written to the current spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:443"
        },
        {
            "message": "Missing item type\nFunction that installs a spy on an existing object's method name.  Used within a Spec to create a spy.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:453"
        },
        {
            "message": "Missing item type\nCreates a Jasmine spec that will be added to the current suite.\n\n// TODO: pending tests",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:473"
        },
        {
            "message": "Missing item type\nCreates a <em>disabled</em> Jasmine spec.\n\nA convenience method that allows existing specs to be disabled temporarily during development.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:491"
        },
        {
            "message": "Missing item type\nStarts a chain for a Jasmine expectation.\n\nIt is passed an Object that is the actual value and should chain to one of the many\njasmine.Matchers functions.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:504"
        },
        {
            "message": "Missing item type\nDefines part of a jasmine spec.  Used in cominbination with waits or waitsFor in asynchrnous specs.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:517"
        },
        {
            "message": "Missing item type\nWaits a fixed time period before moving to the next block.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:527"
        },
        {
            "message": "Missing item type\nWaits for the latchFunction to return true before proceeding to the next block.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:538"
        },
        {
            "message": "Missing item type\nA function that is called before each spec in a suite.\n\nUsed for spec setup, including validating assumptions.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:550"
        },
        {
            "message": "Missing item type\nA function that is called after each spec in a suite.\n\nUsed for restoring any state that is hijacked during spec execution.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:562"
        },
        {
            "message": "Missing item type\nDefines a suite of specifications.\n\nStores the description and all defined specs in the Jasmine environment as one suite of specs. Variables declared\nare accessible by calls to beforeEach, it, and afterEach. Describe blocks can be nested, allowing for specialization\nof setup in some tests.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:574"
        },
        {
            "message": "Missing item type\nDisables a suite of specifications.  Used to disable some suites in a file, or files, temporarily during development.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:594"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:633"
        },
        {
            "message": "Missing item type\nDeclare that a child class inherit it's prototype from the parent class.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:638"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:646"
        },
        {
            "message": "Missing item type\nEnvironment for Jasmine",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:700"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:738"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:749"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:766"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:773"
        },
        {
            "message": "Missing item type\nRegister a reporter to receive status updates from Jasmine.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:780"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:977"
        },
        {
            "message": "Missing item type\nBlocks are functions with executable code that make up a spec.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1008"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1030"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1132"
        },
        {
            "message": "Missing item type\ntoBe: compares the actual to the expected using ===",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1209"
        },
        {
            "message": "Missing item type\ntoNotBe: compares the actual to the expected using !==",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1217"
        },
        {
            "message": "Missing item type\ntoEqual: compares the actual to the expected using common sense equality. Handles Objects, Arrays, etc.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1226"
        },
        {
            "message": "Missing item type\ntoNotEqual: compares the actual to the expected using the ! of jasmine.Matchers.toEqual",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1235"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to the expected using a regular expression.  Constructs a RegExp, so takes\na pattern or a String.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1244"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to the expected using the boolean inverse of jasmine.Matchers.toMatch",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1254"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to jasmine.undefined.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1263"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to jasmine.undefined.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1270"
        },
        {
            "message": "Missing item type\nMatcher that compares the actual to null.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1277"
        },
        {
            "message": "Missing item type\nMatcher that boolean not-nots the actual.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1284"
        },
        {
            "message": "Missing item type\nMatcher that boolean nots the actual.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1292"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was called.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1300"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1322"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was not called.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1325"
        },
        {
            "message": "Missing item type\nMatcher that checks to see if the actual, a Jasmine spy, was called with a set of parameters.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1349"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1378"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1381"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is an element in the actual Array.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1398"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is NOT an element in the actual Array.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1407"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected item is equal to the actual item\nup to a given level of decimal precision (default 2).",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1425"
        },
        {
            "message": "Missing item type\nMatcher that checks that the expected exception was thrown by the actual.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1442"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1619"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1715"
        },
        {
            "message": "Missing item type\nHolds results for a set of Jasmine spec. Allows for the results array to hold another jasmine.NestedResults",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1750"
        },
        {
            "message": "Missing item type\nThe total count of results",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1756"
        },
        {
            "message": "Missing item type\nNumber of passed results",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1760"
        },
        {
            "message": "Missing item type\nNumber of failed results",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1764"
        },
        {
            "message": "Missing item type\nWas this suite/spec skipped?",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1768"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1772"
        },
        {
            "message": "Missing item type\nRoll up the result counts.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1778"
        },
        {
            "message": "Missing item type\nAdds a log message.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1789"
        },
        {
            "message": "Missing item type\nGetter for the results: message & results.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1797"
        },
        {
            "message": "Missing item type\nAdds a result, tracking counts (total, passed, & failed)",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1804"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1824"
        },
        {
            "message": "Missing item type\nBase class for pretty printing for expectation results.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1830"
        },
        {
            "message": "Missing item type\nFormats a value in a nice, human-readable string.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:1837"
        },
        {
            "message": "Missing item type\nRunner",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:2052"
        },
        {
            "message": "Missing item type\nInternal representation of a Jasmine specification, or test.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:2129"
        },
        {
            "message": "Missing item type\nAll parameters are pretty-printed and concatenated together, then written to the spec's output.\n\nBe careful not to leave calls to <code>jasmine.log</code> in production code.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:2168"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:2191"
        },
        {
            "message": "Missing item type\nWaits a fixed time period before moving to the next block.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:2204"
        },
        {
            "message": "Missing item type\nWaits for the latchFunction to return true before proceeding to the next block.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:2216"
        },
        {
            "message": "Missing item type\nInternal representation of a Jasmine suite.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:2372"
        },
        {
            "message": "Missing item type\nA block which waits for some condition to become true, with timeout.",
            "line": " vendor/libraries/components/knockout/spec/lib/jasmine-1.2.0/jasmine.js:2469"
        },
        {
            "message": "Missing item type\nWait until the test condition is true or a timeout occurs. Useful for waiting\non a server response or for a ui change (fadeIn, etc.) to occur.",
            "line": " vendor/libraries/components/knockout/spec/runner.phantom.js:35"
        },
        {
            "message": "Missing item type\nBridget makes jQuery widgets\nv1.0.1",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:9"
        },
        {
            "message": "Missing item type\nadds option method -> $().plugin('option', {...})",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:35"
        },
        {
            "message": "Missing item type\njQuery plugin bridge, access methods like $elem.plugin('method')",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:65"
        },
        {
            "message": "Missing item type\nconverts a Prototypical class into a proper jQuery plugin\n  the class must have a ._init method",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:121"
        },
        {
            "message": "Missing item type\nFinds the index of the listener for the event in it's storage array.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:323"
        },
        {
            "message": "Missing item type\nAlias a method while keeping the context correct, to allow for overwriting of target method.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:342"
        },
        {
            "message": "Missing item type\nReturns the listener array for the specified event.\nWill initialise the event object and listener arrays if required.\nWill return an object if you use a regex search. The object contains keys for each matched event. So /ba[rz]/ might return an object containing bar and baz. But only if you have either defined them with defineEvent or added some listeners to them.\nEach property in the object response is an array of listener functions.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:355"
        },
        {
            "message": "Missing item type\nTakes a list of listener objects and flattens it into a list of listener functions.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:386"
        },
        {
            "message": "Missing item type\nFetches the requested listeners via getListeners but will always return the results inside an object. This is mainly for internal use but others may find it useful.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:403"
        },
        {
            "message": "Missing item type\nAdds a listener function to the specified event.\nThe listener will not be added if it is a duplicate.\nIf the listener returns true then it will be removed after it is called.\nIf you pass a regular expression as the event name then the listener will be added to all events that match it.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:421"
        },
        {
            "message": "Missing item type\nAlias of addListener",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:448"
        },
        {
            "message": "Missing item type\nSemi-alias of addListener. It will add a listener that will be\nautomatically removed after it's first execution.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:453"
        },
        {
            "message": "Missing item type\nAlias of addOnceListener.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:468"
        },
        {
            "message": "Missing item type\nDefines an event name. This is required if you want to use a regex to add a listener to multiple events at once. If you don't do this then how do you expect it to know what event to add to? Should it just add to every possible match for a regex? No. That is scary and bad.\nYou need to tell it what event names should be matched by a regex.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:473"
        },
        {
            "message": "Missing item type\nUses defineEvent to define multiple events.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:485"
        },
        {
            "message": "Missing item type\nRemoves a listener function from the specified event.\nWhen passed a regular expression as the event name, it will remove the listener from all events that match it.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:498"
        },
        {
            "message": "Missing item type\nAlias of removeListener",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:524"
        },
        {
            "message": "Missing item type\nAdds listeners in bulk using the manipulateListeners method.\nIf you pass an object as the second argument you can add to multiple events at once. The object should contain key value pairs of events and listeners or listener arrays. You can also pass it an event name and an array of listeners to be added.\nYou can also pass it a regular expression to add the array of listeners to all events that match it.\nYeah, this function does quite a bit. That's probably a bad thing.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:529"
        },
        {
            "message": "Missing item type\nRemoves listeners in bulk using the manipulateListeners method.\nIf you pass an object as the second argument you can remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\nYou can also pass it an event name and an array of listeners to be removed.\nYou can also pass it a regular expression to remove the listeners from all events that match it.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:544"
        },
        {
            "message": "Missing item type\nEdits listeners in bulk. The addListeners and removeListeners methods both use this to do their job. You should really use those instead, this is a little lower level.\nThe first argument will determine if the listeners are removed (true) or added (false).\nIf you pass an object as the second argument you can add/remove from multiple events at once. The object should contain key value pairs of events and listeners or listener arrays.\nYou can also pass it an event name and an array of listeners to be added/removed.\nYou can also pass it a regular expression to manipulate the listeners of all events that match it.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:559"
        },
        {
            "message": "Missing item type\nRemoves all listeners from a specified event.\nIf you do not specify an event then all listeners will be removed.\nThat means every event will be emptied.\nYou can also pass a regex to remove all events that match it.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:605"
        },
        {
            "message": "Missing item type\nAlias of removeEvent.\n\nAdded to mirror the node API.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:640"
        },
        {
            "message": "Missing item type\nEmits an event of your choice.\nWhen emitted, every listener attached to that event will be executed.\nIf you pass the optional argument array then those arguments will be passed to every listener upon execution.\nBecause it uses `apply`, your array of arguments will be passed as if you wrote them out separately.\nSo they will not arrive within the array on the other side, they will be separate.\nYou can also pass a regular expression to emit to all events that match it.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:647"
        },
        {
            "message": "Missing item type\nAlias of emitEvent",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:691"
        },
        {
            "message": "Missing item type\nSubtly different from emitEvent in that it will pass its arguments on to the listeners, as opposed to taking a single array of arguments to pass on.\nAs with emitEvent, you can pass a regex in place of the event name to emit to all events that match it.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:696"
        },
        {
            "message": "Missing item type\nSets the current value to check against when executing listeners. If a\nlisteners return value matches the one set here then it will be removed\nafter execution. This value defaults to true.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:709"
        },
        {
            "message": "Missing item type\nFetches the current value to check against when executing listeners. If\nthe listeners return value matches this one then it should be removed\nautomatically. It will return true by default.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:722"
        },
        {
            "message": "Missing item type\nFetches the events object and creates one if required.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:739"
        },
        {
            "message": "Missing item type\nReverts the global {@link EventEmitter} to its previous value and returns a reference to this version.",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:749"
        },
        {
            "message": "Missing item type\ngetSize v1.1.7\nmeasure size of elements",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:828"
        },
        {
            "message": "Missing item type\nWebKit measures the outer-width on style.width on border-box elems\nIE & Firefox measures the inner-width",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:901"
        },
        {
            "message": "Missing item type\nmatchesSelector helper v1.0.1",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1043"
        },
        {
            "message": "Missing item type\nOutlayer Item",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1146"
        },
        {
            "message": "Missing item type\napply CSS styles to element",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1274"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1401"
        },
        {
            "message": "Missing item type\nproper transition",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1417"
        },
        {
            "message": "Missing item type\nremoves style property from element",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1548"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1769"
        },
        {
            "message": "Missing item type\nset options",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1836"
        },
        {
            "message": "Missing item type\nturn elements into Outlayer.Items to be used in layout",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1866"
        },
        {
            "message": "Missing item type\nget item elements to be used in layout",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1887"
        },
        {
            "message": "Missing item type\ngetter method for getting item elements",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1924"
        },
        {
            "message": "Missing item type\nlays out all items",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1938"
        },
        {
            "message": "Missing item type\nlogic before any new layout",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1957"
        },
        {
            "message": "Missing item type\nget measurement from option, for columnWidth, rowHeight, gutter\nif option is String -> get element from selector string, & get size of element\nif option is Element -> get size of element\nelse use option as a number",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1969"
        },
        {
            "message": "Missing item type\nlayout a collection of item elements",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:1997"
        },
        {
            "message": "Missing item type\nget the items to be laid out\nyou may want to skip over some items",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2009"
        },
        {
            "message": "Missing item type\nlayout items",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2026"
        },
        {
            "message": "Missing item type\nget item layout position",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2061"
        },
        {
            "message": "Missing item type\niterate over array and position each item\nReason being - separating this logic prevents 'layout invalidation'\nthx @paul_irish",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2073"
        },
        {
            "message": "Missing item type\nSets position of item in DOM",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2086"
        },
        {
            "message": "Missing item type\nAny logic you want to do after each layout,\ni.e. size the container",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2102"
        },
        {
            "message": "Missing item type\nSets width or height of container if returned",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2121"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2129"
        },
        {
            "message": "Missing item type\ntrigger a callback for a collection of items events",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2151"
        },
        {
            "message": "Missing item type\nkeep item in collection, but do not lay it out\nignored items do not get skipped in layout",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2179"
        },
        {
            "message": "Missing item type\nreturn item to layout collection",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2191"
        },
        {
            "message": "Missing item type\nadds elements to stamps",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2202"
        },
        {
            "message": "Missing item type\nremoves elements to stamps",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2220"
        },
        {
            "message": "Missing item type\nfinds child elements",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2239"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2282"
        },
        {
            "message": "Missing item type\nget x/y position of element relative to container element",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2287"
        },
        {
            "message": "Missing item type\nBind layout to window resizing",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2316"
        },
        {
            "message": "Missing item type\nUnbind layout to window resizing",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2328"
        },
        {
            "message": "Missing item type\ncheck if layout is needed post layout",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2368"
        },
        {
            "message": "Missing item type\nadd items to Outlayer instance",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2382"
        },
        {
            "message": "Missing item type\nLayout newly-appended item elements",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2396"
        },
        {
            "message": "Missing item type\nLayout prepended elements",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2410"
        },
        {
            "message": "Missing item type\nreveal a collection of items",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2432"
        },
        {
            "message": "Missing item type\nhide a collection of items",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2447"
        },
        {
            "message": "Missing item type\nget Outlayer.Item, given an Element",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2462"
        },
        {
            "message": "Missing item type\nget collection of Outlayer.Items, given Elements",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2479"
        },
        {
            "message": "Missing item type\nremove element(s) from instance and DOM",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2500"
        },
        {
            "message": "Missing item type\nget Outlayer instance from element",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2552"
        },
        {
            "message": "Missing item type\ncreate a layout class",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2565"
        },
        {
            "message": "Missing item type\nallow user to initialize Outlayer via .js-namespace class\noptions are parsed from data-namespace-option attribute",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2602"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/masonry/dist/masonry.pkgd.js:2789"
        },
        {
            "message": "Missing item type\nMasonry v2 shim\nto maintain backwards compatibility",
            "line": " vendor/libraries/components/masonry/examples/js/masonry-v2-shim.js:1"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/masonry/masonry.js:109"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/components/stickem/jquery.stickem.js:1"
        },
        {
            "message": "Missing item type\nExample function",
            "line": " vendor/libraries/kriswallsmith/assetic/tests/Assetic/Test/Filter/fixtures/packer/example.js:1"
        },
        {
            "message": "Missing item type\nCopyright",
            "line": " vendor/libraries/kriswallsmith/assetic/tests/Assetic/Test/Filter/fixtures/uglifyjs/script.js:1"
        },
        {
            "message": "Missing item type",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array. If the func returns\na true value, it will break out of the loop.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:49"
        },
        {
            "message": "Missing item type\nHelper function for iterating over an array backwards. If the func\nreturns a true value, it will break out of the loop.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:64"
        },
        {
            "message": "Missing item type\nCycles over properties in an object and calls a function for each\nproperty value. If the function returns a truthy value, then the\niteration is stopped.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:87"
        },
        {
            "message": "Missing item type\nSimple function to mix in properties from source into target,\nbut only if target does not already have a property of the same name.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:103"
        },
        {
            "message": "Missing item type\nConstructs an error with a pointer to an URL with more information.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:150"
        },
        {
            "message": "Missing item type\nTrims the . and .. from an array of path segments.\nIt will keep a leading path segment if a .. will become\nthe first path segment, to help with module name lookups,\nwhich act like paths, but can be remapped. But the end result,\nall paths that use this function should look normalized.\nNOTE: this method MODIFIES the input array.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:216"
        },
        {
            "message": "Missing item type\nGiven a relative module name, like ./something, normalize it to\na real name that can be mapped to a path.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:249"
        },
        {
            "message": "Missing item type\nCreates a module mapping that includes plugin prefix, module\nname, and path. If parentModuleMap is provided it will\nalso normalize the name via require.normalize()",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:395"
        },
        {
            "message": "Missing item type\nInternal method to transfer globalQueue items to this context's\ndefQueue.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:532"
        },
        {
            "message": "Missing item type\nChecks if the module is ready to define itself, and if so,\ndefine it.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:814"
        },
        {
            "message": "Missing item type\nGiven an event from a script node, get the requirejs info from it,\nand then removes the event listeners on the node.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1168"
        },
        {
            "message": "Missing item type\nSet a configuration for the context.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1221"
        },
        {
            "message": "Missing item type\nConverts a module name + .extension into an URL path.\n*Requires* the use of a module name. It does not support using\nplain URLs like nameToUrl.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1405"
        },
        {
            "message": "Missing item type\nCalled to enable a module if it is still in the registry\nawaiting enablement. A second arg, parent, the parent module,\nis passed in for context, when this method is overriden by\nthe optimizer. Not shown here to keep code compact.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1467"
        },
        {
            "message": "Missing item type\nInternal method used by environment adapters to complete a load event.\nA load event could be a script load or just a load pass from a synchronous\nload call.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1480"
        },
        {
            "message": "Missing item type\nConverts a module name to a file path. Supports cases where\nmoduleName may actually be just an URL.\nNote that it **does not** call normalize on the moduleName,\nit is assumed to have already been normalized. This is an\ninternal API, not a public one. Use toUrl for the public API.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1536"
        },
        {
            "message": "Missing item type\nExecutes a module callack function. Broken out as a separate function\nsolely to allow the build system to sequence the files in the built\nlayer in the right sequence.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1607"
        },
        {
            "message": "Missing item type\ncallback for script loads, used to check status of loading.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1618"
        },
        {
            "message": "Missing item type\nCallback for script errors.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1640"
        },
        {
            "message": "Missing item type\nMain entry point.\n\nIf the only argument to require is a string, then the module that\nis represented by that string is fetched for the appropriate context.\n\nIf the first argument is an array, then it will be treated as an array\nof dependency string names to fetch. An optional function callback can\nbe specified to execute when all of those dependencies are available.\n\nMake a local req variable to help Caja compliance (it assumes things\non a require that are not standardized), and to give a short\nname for minification/local scope use.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1655"
        },
        {
            "message": "Missing item type\nSupport require.config() to make it easier to cooperate with other\nAMD loaders on globally agreed names.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1705"
        },
        {
            "message": "Missing item type\nExecute something after the current tick\nof the event loop. Override for other envs\nthat have a better solution than setTimeout.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1713"
        },
        {
            "message": "Missing item type\nExport require as a global, but only if it does not already exist.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1723"
        },
        {
            "message": "Missing item type\nAny errors that require explicitly generates will be passed to this\nfunction. Intercept/override it if you want custom error handling.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1770"
        },
        {
            "message": "Missing item type\nDoes the request to load a module for the browser case.\nMake this a separate function to allow other environments\nto override it.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1779"
        },
        {
            "message": "Missing item type\nThe function that handles definitions of modules. Differs from\nrequire() in that a string for the module should be the first argument,\nand the function to execute after dependencies are loaded should\nreturn a value to define the module corresponding to the first argument's\nname.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:1933"
        },
        {
            "message": "Missing item type\nExecutes the text. Normally just uses eval, but can be modified\nto use a better, environment-specific call. Only used for transpiling\nloader plugins, not for plain JS modules.",
            "line": " vendor/libraries/robloach/component-installer/src/ComponentInstaller/Resources/require.js:2006"
        },
        {
            "message": "Missing item type\nThis is a JavaScript test file.",
            "line": " vendor/libraries/robloach/component-installer/tests/ComponentInstaller/Test/Resources/test.js:1"
        },
        {
            "message": "Missing item type\nThis is a JavaScript test2 file.",
            "line": " vendor/libraries/robloach/component-installer/tests/ComponentInstaller/Test/Resources/test2.js:1"
        },
        {
            "message": "Missing item type\nBuild script for UsabilityDynamics SCMF",
            "line": " gruntfile.js:1"
        }
    ]
}