/* automatically generated by JSCoverage - do not edit */
if (typeof _$jscoverage === 'undefined') _$jscoverage = {};
if (! _$jscoverage['elastic-filter.js']) {
  _$jscoverage['elastic-filter.js'] = [];
  _$jscoverage['elastic-filter.js'][20] = 0;
  _$jscoverage['elastic-filter.js'][23] = 0;
  _$jscoverage['elastic-filter.js'][140] = 0;
  _$jscoverage['elastic-filter.js'][141] = 0;
  _$jscoverage['elastic-filter.js'][147] = 0;
  _$jscoverage['elastic-filter.js'][149] = 0;
  _$jscoverage['elastic-filter.js'][150] = 0;
  _$jscoverage['elastic-filter.js'][151] = 0;
  _$jscoverage['elastic-filter.js'][156] = 0;
  _$jscoverage['elastic-filter.js'][159] = 0;
  _$jscoverage['elastic-filter.js'][162] = 0;
  _$jscoverage['elastic-filter.js'][165] = 0;
  _$jscoverage['elastic-filter.js'][168] = 0;
  _$jscoverage['elastic-filter.js'][171] = 0;
  _$jscoverage['elastic-filter.js'][172] = 0;
  _$jscoverage['elastic-filter.js'][175] = 0;
  _$jscoverage['elastic-filter.js'][176] = 0;
  _$jscoverage['elastic-filter.js'][177] = 0;
  _$jscoverage['elastic-filter.js'][178] = 0;
  _$jscoverage['elastic-filter.js'][182] = 0;
  _$jscoverage['elastic-filter.js'][185] = 0;
  _$jscoverage['elastic-filter.js'][190] = 0;
  _$jscoverage['elastic-filter.js'][191] = 0;
  _$jscoverage['elastic-filter.js'][192] = 0;
  _$jscoverage['elastic-filter.js'][193] = 0;
  _$jscoverage['elastic-filter.js'][196] = 0;
  _$jscoverage['elastic-filter.js'][205] = 0;
  _$jscoverage['elastic-filter.js'][208] = 0;
  _$jscoverage['elastic-filter.js'][210] = 0;
  _$jscoverage['elastic-filter.js'][212] = 0;
  _$jscoverage['elastic-filter.js'][213] = 0;
  _$jscoverage['elastic-filter.js'][216] = 0;
  _$jscoverage['elastic-filter.js'][220] = 0;
  _$jscoverage['elastic-filter.js'][222] = 0;
  _$jscoverage['elastic-filter.js'][231] = 0;
  _$jscoverage['elastic-filter.js'][233] = 0;
  _$jscoverage['elastic-filter.js'][234] = 0;
  _$jscoverage['elastic-filter.js'][237] = 0;
  _$jscoverage['elastic-filter.js'][238] = 0;
  _$jscoverage['elastic-filter.js'][239] = 0;
  _$jscoverage['elastic-filter.js'][242] = 0;
  _$jscoverage['elastic-filter.js'][244] = 0;
  _$jscoverage['elastic-filter.js'][253] = 0;
  _$jscoverage['elastic-filter.js'][255] = 0;
  _$jscoverage['elastic-filter.js'][257] = 0;
  _$jscoverage['elastic-filter.js'][268] = 0;
  _$jscoverage['elastic-filter.js'][270] = 0;
  _$jscoverage['elastic-filter.js'][272] = 0;
  _$jscoverage['elastic-filter.js'][275] = 0;
  _$jscoverage['elastic-filter.js'][281] = 0;
  _$jscoverage['elastic-filter.js'][283] = 0;
  _$jscoverage['elastic-filter.js'][284] = 0;
  _$jscoverage['elastic-filter.js'][287] = 0;
  _$jscoverage['elastic-filter.js'][288] = 0;
  _$jscoverage['elastic-filter.js'][292] = 0;
  _$jscoverage['elastic-filter.js'][295] = 0;
  _$jscoverage['elastic-filter.js'][296] = 0;
  _$jscoverage['elastic-filter.js'][297] = 0;
  _$jscoverage['elastic-filter.js'][306] = 0;
  _$jscoverage['elastic-filter.js'][309] = 0;
  _$jscoverage['elastic-filter.js'][311] = 0;
  _$jscoverage['elastic-filter.js'][312] = 0;
  _$jscoverage['elastic-filter.js'][315] = 0;
  _$jscoverage['elastic-filter.js'][317] = 0;
  _$jscoverage['elastic-filter.js'][318] = 0;
  _$jscoverage['elastic-filter.js'][321] = 0;
  _$jscoverage['elastic-filter.js'][322] = 0;
  _$jscoverage['elastic-filter.js'][325] = 0;
  _$jscoverage['elastic-filter.js'][330] = 0;
  _$jscoverage['elastic-filter.js'][339] = 0;
  _$jscoverage['elastic-filter.js'][342] = 0;
  _$jscoverage['elastic-filter.js'][353] = 0;
  _$jscoverage['elastic-filter.js'][356] = 0;
  _$jscoverage['elastic-filter.js'][359] = 0;
  _$jscoverage['elastic-filter.js'][368] = 0;
  _$jscoverage['elastic-filter.js'][370] = 0;
  _$jscoverage['elastic-filter.js'][371] = 0;
  _$jscoverage['elastic-filter.js'][374] = 0;
  _$jscoverage['elastic-filter.js'][375] = 0;
  _$jscoverage['elastic-filter.js'][378] = 0;
  _$jscoverage['elastic-filter.js'][384] = 0;
  _$jscoverage['elastic-filter.js'][387] = 0;
  _$jscoverage['elastic-filter.js'][388] = 0;
  _$jscoverage['elastic-filter.js'][391] = 0;
  _$jscoverage['elastic-filter.js'][392] = 0;
  _$jscoverage['elastic-filter.js'][393] = 0;
  _$jscoverage['elastic-filter.js'][396] = 0;
  _$jscoverage['elastic-filter.js'][398] = 0;
  _$jscoverage['elastic-filter.js'][409] = 0;
  _$jscoverage['elastic-filter.js'][411] = 0;
  _$jscoverage['elastic-filter.js'][413] = 0;
  _$jscoverage['elastic-filter.js'][415] = 0;
  _$jscoverage['elastic-filter.js'][416] = 0;
  _$jscoverage['elastic-filter.js'][419] = 0;
  _$jscoverage['elastic-filter.js'][421] = 0;
  _$jscoverage['elastic-filter.js'][423] = 0;
  _$jscoverage['elastic-filter.js'][434] = 0;
  _$jscoverage['elastic-filter.js'][437] = 0;
  _$jscoverage['elastic-filter.js'][438] = 0;
  _$jscoverage['elastic-filter.js'][441] = 0;
  _$jscoverage['elastic-filter.js'][442] = 0;
  _$jscoverage['elastic-filter.js'][446] = 0;
  _$jscoverage['elastic-filter.js'][448] = 0;
  _$jscoverage['elastic-filter.js'][454] = 0;
  _$jscoverage['elastic-filter.js'][463] = 0;
  _$jscoverage['elastic-filter.js'][465] = 0;
  _$jscoverage['elastic-filter.js'][467] = 0;
  _$jscoverage['elastic-filter.js'][475] = 0;
  _$jscoverage['elastic-filter.js'][478] = 0;
  _$jscoverage['elastic-filter.js'][479] = 0;
  _$jscoverage['elastic-filter.js'][482] = 0;
  _$jscoverage['elastic-filter.js'][484] = 0;
  _$jscoverage['elastic-filter.js'][486] = 0;
  _$jscoverage['elastic-filter.js'][489] = 0;
  _$jscoverage['elastic-filter.js'][490] = 0;
  _$jscoverage['elastic-filter.js'][494] = 0;
  _$jscoverage['elastic-filter.js'][495] = 0;
  _$jscoverage['elastic-filter.js'][497] = 0;
  _$jscoverage['elastic-filter.js'][498] = 0;
  _$jscoverage['elastic-filter.js'][499] = 0;
  _$jscoverage['elastic-filter.js'][502] = 0;
  _$jscoverage['elastic-filter.js'][503] = 0;
  _$jscoverage['elastic-filter.js'][506] = 0;
  _$jscoverage['elastic-filter.js'][507] = 0;
  _$jscoverage['elastic-filter.js'][509] = 0;
  _$jscoverage['elastic-filter.js'][510] = 0;
  _$jscoverage['elastic-filter.js'][512] = 0;
  _$jscoverage['elastic-filter.js'][516] = 0;
  _$jscoverage['elastic-filter.js'][517] = 0;
  _$jscoverage['elastic-filter.js'][521] = 0;
  _$jscoverage['elastic-filter.js'][522] = 0;
  _$jscoverage['elastic-filter.js'][525] = 0;
  _$jscoverage['elastic-filter.js'][527] = 0;
  _$jscoverage['elastic-filter.js'][536] = 0;
  _$jscoverage['elastic-filter.js'][537] = 0;
  _$jscoverage['elastic-filter.js'][539] = 0;
  _$jscoverage['elastic-filter.js'][546] = 0;
  _$jscoverage['elastic-filter.js'][548] = 0;
  _$jscoverage['elastic-filter.js'][550] = 0;
  _$jscoverage['elastic-filter.js'][558] = 0;
  _$jscoverage['elastic-filter.js'][559] = 0;
  _$jscoverage['elastic-filter.js'][566] = 0;
  _$jscoverage['elastic-filter.js'][567] = 0;
  _$jscoverage['elastic-filter.js'][569] = 0;
  _$jscoverage['elastic-filter.js'][572] = 0;
  _$jscoverage['elastic-filter.js'][573] = 0;
  _$jscoverage['elastic-filter.js'][576] = 0;
  _$jscoverage['elastic-filter.js'][584] = 0;
  _$jscoverage['elastic-filter.js'][600] = 0;
  _$jscoverage['elastic-filter.js'][618] = 0;
  _$jscoverage['elastic-filter.js'][621] = 0;
  _$jscoverage['elastic-filter.js'][624] = 0;
  _$jscoverage['elastic-filter.js'][625] = 0;
  _$jscoverage['elastic-filter.js'][630] = 0;
  _$jscoverage['elastic-filter.js'][632] = 0;
  _$jscoverage['elastic-filter.js'][640] = 0;
  _$jscoverage['elastic-filter.js'][641] = 0;
  _$jscoverage['elastic-filter.js'][642] = 0;
  _$jscoverage['elastic-filter.js'][643] = 0;
  _$jscoverage['elastic-filter.js'][652] = 0;
  _$jscoverage['elastic-filter.js'][668] = 0;
  _$jscoverage['elastic-filter.js'][684] = 0;
  _$jscoverage['elastic-filter.js'][691] = 0;
  _$jscoverage['elastic-filter.js'][693] = 0;
  _$jscoverage['elastic-filter.js'][695] = 0;
  _$jscoverage['elastic-filter.js'][697] = 0;
  _$jscoverage['elastic-filter.js'][698] = 0;
  _$jscoverage['elastic-filter.js'][701] = 0;
  _$jscoverage['elastic-filter.js'][702] = 0;
  _$jscoverage['elastic-filter.js'][703] = 0;
  _$jscoverage['elastic-filter.js'][704] = 0;
  _$jscoverage['elastic-filter.js'][708] = 0;
  _$jscoverage['elastic-filter.js'][709] = 0;
  _$jscoverage['elastic-filter.js'][710] = 0;
  _$jscoverage['elastic-filter.js'][717] = 0;
  _$jscoverage['elastic-filter.js'][718] = 0;
  _$jscoverage['elastic-filter.js'][720] = 0;
  _$jscoverage['elastic-filter.js'][727] = 0;
  _$jscoverage['elastic-filter.js'][730] = 0;
  _$jscoverage['elastic-filter.js'][733] = 0;
  _$jscoverage['elastic-filter.js'][737] = 0;
  _$jscoverage['elastic-filter.js'][746] = 0;
  _$jscoverage['elastic-filter.js'][747] = 0;
  _$jscoverage['elastic-filter.js'][748] = 0;
  _$jscoverage['elastic-filter.js'][757] = 0;
  _$jscoverage['elastic-filter.js'][765] = 0;
  _$jscoverage['elastic-filter.js'][766] = 0;
  _$jscoverage['elastic-filter.js'][767] = 0;
  _$jscoverage['elastic-filter.js'][771] = 0;
  _$jscoverage['elastic-filter.js'][784] = 0;
  _$jscoverage['elastic-filter.js'][786] = 0;
  _$jscoverage['elastic-filter.js'][788] = 0;
  _$jscoverage['elastic-filter.js'][789] = 0;
  _$jscoverage['elastic-filter.js'][790] = 0;
  _$jscoverage['elastic-filter.js'][804] = 0;
  _$jscoverage['elastic-filter.js'][813] = 0;
  _$jscoverage['elastic-filter.js'][814] = 0;
  _$jscoverage['elastic-filter.js'][820] = 0;
  _$jscoverage['elastic-filter.js'][821] = 0;
  _$jscoverage['elastic-filter.js'][822] = 0;
  _$jscoverage['elastic-filter.js'][825] = 0;
  _$jscoverage['elastic-filter.js'][826] = 0;
  _$jscoverage['elastic-filter.js'][827] = 0;
  _$jscoverage['elastic-filter.js'][828] = 0;
  _$jscoverage['elastic-filter.js'][832] = 0;
  _$jscoverage['elastic-filter.js'][833] = 0;
  _$jscoverage['elastic-filter.js'][834] = 0;
  _$jscoverage['elastic-filter.js'][835] = 0;
  _$jscoverage['elastic-filter.js'][840] = 0;
  _$jscoverage['elastic-filter.js'][854] = 0;
  _$jscoverage['elastic-filter.js'][855] = 0;
  _$jscoverage['elastic-filter.js'][856] = 0;
  _$jscoverage['elastic-filter.js'][860] = 0;
  _$jscoverage['elastic-filter.js'][872] = 0;
  _$jscoverage['elastic-filter.js'][874] = 0;
  _$jscoverage['elastic-filter.js'][876] = 0;
  _$jscoverage['elastic-filter.js'][893] = 0;
  _$jscoverage['elastic-filter.js'][894] = 0;
  _$jscoverage['elastic-filter.js'][895] = 0;
  _$jscoverage['elastic-filter.js'][899] = 0;
  _$jscoverage['elastic-filter.js'][910] = 0;
  _$jscoverage['elastic-filter.js'][914] = 0;
  _$jscoverage['elastic-filter.js'][916] = 0;
  _$jscoverage['elastic-filter.js'][917] = 0;
  _$jscoverage['elastic-filter.js'][920] = 0;
  _$jscoverage['elastic-filter.js'][921] = 0;
  _$jscoverage['elastic-filter.js'][924] = 0;
  _$jscoverage['elastic-filter.js'][926] = 0;
  _$jscoverage['elastic-filter.js'][927] = 0;
  _$jscoverage['elastic-filter.js'][929] = 0;
  _$jscoverage['elastic-filter.js'][936] = 0;
  _$jscoverage['elastic-filter.js'][942] = 0;
  _$jscoverage['elastic-filter.js'][943] = 0;
  _$jscoverage['elastic-filter.js'][946] = 0;
}
_$jscoverage['elastic-filter.js'][20]++;
new (function (args) {
  _$jscoverage['elastic-filter.js'][23]++;
  var app = window.ef_app = jQuery.extend(true, this, {"settings": {"account_id": undefined, "access_key": undefined, "per_page": 10, "debug": false, "visual_debug": false, "url": "https://cloud.usabilitydynamics.com", "index": ""}, "documents": [], "facets": [], "sort_options": [], "defaults": null, "state": "loading", "query": {"full_text": null, "field": [], "terms": [], "range": [], "fuzzy": [], "from": 0}, "size": 0, "sort": null, "bindings_initialized": [], "total": null, "message": "", "elastic_ready": false, "session_id": null, "global": window.__elastic_filter = {}, "ready": (function () {
}), "_required": {"io": "//ud-cdn.com/js/ud.socket/1.0.0/ud.socket.js", "ko.mapping": "//ud-cdn.com/js/knockout.mapping/2.3.2/knockout.mapping.js", "async": "//ud-cdn.com/js/async/1.0/async.js", "ud.ko": "//ud-cdn.com/js/knockout.ud/1.0/knockout.ud.js", "ud.select": "//ud-cdn.com/js/ud.select/3.2/ud.select.js", "jq-lazyload": "//ud-cdn.com/js/jquery.lazyload/1.8.2/jquery.lazyload.js"}, "_log": {"subscriptions": {}, "search": [], "debug": [], "profilers": {}}}, args);
  _$jscoverage['elastic-filter.js'][140]++;
  app._document = (function (item) {
  _$jscoverage['elastic-filter.js'][141]++;
  return item;
});
  _$jscoverage['elastic-filter.js'][147]++;
  app._facet = (function (item, title) {
  _$jscoverage['elastic-filter.js'][149]++;
  var options = [];
  _$jscoverage['elastic-filter.js'][150]++;
  for (var i in item.terms) {
    _$jscoverage['elastic-filter.js'][151]++;
    options.push({"text": item.terms[i].term, "id": item.terms[i].term});
}
  _$jscoverage['elastic-filter.js'][156]++;
  item._label = title;
  _$jscoverage['elastic-filter.js'][159]++;
  item.options = ko.observableArray(options);
  _$jscoverage['elastic-filter.js'][162]++;
  item.value = ko.observable();
  _$jscoverage['elastic-filter.js'][165]++;
  item.select_multiple = ko.observableArray();
  _$jscoverage['elastic-filter.js'][168]++;
  item.select_multiple.subscribe((function (value) {
  _$jscoverage['elastic-filter.js'][171]++;
  app.view_model.query.terms.remove(ko.utils.arrayFirst(app.view_model.query.terms(), (function (term) {
  _$jscoverage['elastic-filter.js'][172]++;
  return typeof term[title] != "undefined";
})));
  _$jscoverage['elastic-filter.js'][175]++;
  if (value.length) {
    _$jscoverage['elastic-filter.js'][176]++;
    var object = {};
    _$jscoverage['elastic-filter.js'][177]++;
    object[title] = value;
    _$jscoverage['elastic-filter.js'][178]++;
    app.view_model.query.terms.push(object);
  }
  _$jscoverage['elastic-filter.js'][182]++;
  app.view_model.size(parseInt(app.view_model.settings.per_page()));
  _$jscoverage['elastic-filter.js'][185]++;
  app.search_request();
}));
  _$jscoverage['elastic-filter.js'][190]++;
  item.css_class = ko.computed((function () {
  _$jscoverage['elastic-filter.js'][191]++;
  var len = typeof item.options() !== "undefined"? item.options().length: 0;
  _$jscoverage['elastic-filter.js'][192]++;
  var len_class = len == 1? "eff_single_option": (! len? "eff_no_options": "eff_options_" + len);
  _$jscoverage['elastic-filter.js'][193]++;
  return len_class + " ef_facet_" + title.replace(" ", "_");
}));
  _$jscoverage['elastic-filter.js'][196]++;
  return item;
});
  _$jscoverage['elastic-filter.js'][205]++;
  app.profile = (function (name, note, args) {
  _$jscoverage['elastic-filter.js'][208]++;
  if (app._log.profilers[name] && note) {
    _$jscoverage['elastic-filter.js'][210]++;
    var output = ["Profiler", name, note, (new Date().getTime() - app._log.profilers[name]) / 1000];
    _$jscoverage['elastic-filter.js'][212]++;
    if (args) {
      _$jscoverage['elastic-filter.js'][213]++;
      output.push(args);
    }
    _$jscoverage['elastic-filter.js'][216]++;
    return app.log.apply(this, output);
  }
  _$jscoverage['elastic-filter.js'][220]++;
  app._log.profilers[name] = new Date().getTime();
  _$jscoverage['elastic-filter.js'][222]++;
  return this;
});
  _$jscoverage['elastic-filter.js'][231]++;
  app.log = (function () {
  _$jscoverage['elastic-filter.js'][233]++;
  if (typeof console === "undefined") {
    _$jscoverage['elastic-filter.js'][234]++;
    return arguments? arguments: null;
  }
  _$jscoverage['elastic-filter.js'][237]++;
  if (arguments[0] instanceof Error) {
    _$jscoverage['elastic-filter.js'][238]++;
    console.error("ElasticFilter Fatal Error:", arguments[0].message);
    _$jscoverage['elastic-filter.js'][239]++;
    return arguments;
  }
  _$jscoverage['elastic-filter.js'][242]++;
  console.log(arguments);
  _$jscoverage['elastic-filter.js'][244]++;
  return arguments? arguments: null;
});
  _$jscoverage['elastic-filter.js'][253]++;
  app.debug = (function () {
  _$jscoverage['elastic-filter.js'][255]++;
  app._log.debug.push({"time": new Date().getTime(), "data": arguments});
  _$jscoverage['elastic-filter.js'][257]++;
  return (ko.utils.unwrapObservable(app.settings.debug) || arguments[0] instanceof Error? app.log.apply(this, arguments): arguments);
});
  _$jscoverage['elastic-filter.js'][268]++;
  app.init = (function () {
  _$jscoverage['elastic-filter.js'][270]++;
  utils.back_support();
  _$jscoverage['elastic-filter.js'][272]++;
  app.debug("init");
  _$jscoverage['elastic-filter.js'][275]++;
  async.auto({"binding_handlers": [(function (next, report) {
  _$jscoverage['elastic-filter.js'][281]++;
  app.debug("init", "auto", "binding_handlers");
  _$jscoverage['elastic-filter.js'][283]++;
  if (typeof ko !== "object") {
    _$jscoverage['elastic-filter.js'][284]++;
    return next(new Error("Missing Knockout."));
  }
  _$jscoverage['elastic-filter.js'][287]++;
  if (typeof io !== "object") {
    _$jscoverage['elastic-filter.js'][288]++;
    return next(app.debug(new Error("Missing Socket.io.")));
  }
  _$jscoverage['elastic-filter.js'][292]++;
  ko.bindingHandlers["elastic-filter"] = {"init": (function (element, valueAccessor) {
  _$jscoverage['elastic-filter.js'][295]++;
  app.log("binding_handlers", "elastic-filter", "init");
  _$jscoverage['elastic-filter.js'][296]++;
  ko.mapping.fromJS({"settings": jQuery.extend(true, {}, app.settings, ko.utils.unwrapObservable(valueAccessor()))}, app.view_model);
  _$jscoverage['elastic-filter.js'][297]++;
  app.bindings_initialized.push("elastic-filter");
})};
  _$jscoverage['elastic-filter.js'][306]++;
  ko.bindingHandlers["fulltext-search"] = {"init": (function (element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
  _$jscoverage['elastic-filter.js'][309]++;
  app.debug("binding_handlers", "fulltext-search", "init");
  _$jscoverage['elastic-filter.js'][311]++;
  if (typeof jQuery().select2 == "undefined") {
    _$jscoverage['elastic-filter.js'][312]++;
    return new Error("Select2 library is required for Fulltext Search feature");
  }
  _$jscoverage['elastic-filter.js'][315]++;
  jQuery(element).select2(valueAccessor());
  _$jscoverage['elastic-filter.js'][317]++;
  if (typeof allBindingsAccessor().elastic_settings != "undefined") {
    _$jscoverage['elastic-filter.js'][318]++;
    ko.mapping.fromJS({"settings": allBindingsAccessor().elastic_settings}, app.view_model);
  }
  _$jscoverage['elastic-filter.js'][321]++;
  ko.utils.domNodeDisposal.addDisposeCallback(element, (function () {
  _$jscoverage['elastic-filter.js'][322]++;
  jQuery(element).select2("destroy");
}));
  _$jscoverage['elastic-filter.js'][325]++;
  app.bindings_initialized.push("fulltext-search");
})};
  _$jscoverage['elastic-filter.js'][330]++;
  return next(null, [ko.bindingHandlers]);
})], "observable": ["binding_handlers", (function (next, report) {
  _$jscoverage['elastic-filter.js'][339]++;
  app.debug("init", "auto", "observable");
  _$jscoverage['elastic-filter.js'][342]++;
  app.view_model = ko.mapping.fromJS(app, {"ignore": utils.get_methods(app).concat("_log", "_required", "model_functions", "facet_functions", "document_functions", "utils", "success", "global")});
  _$jscoverage['elastic-filter.js'][353]++;
  ko.applyBindings(app.view_model);
  _$jscoverage['elastic-filter.js'][356]++;
  jQuery.extend(true, app.view_model, app.facet_functions, app.document_functions);
  _$jscoverage['elastic-filter.js'][359]++;
  return next(null, app);
})], "socket": ["observable", (function (next) {
  _$jscoverage['elastic-filter.js'][368]++;
  app.debug("init", "auto", "socket");
  _$jscoverage['elastic-filter.js'][370]++;
  if (! app.bindings_initialized.length) {
    _$jscoverage['elastic-filter.js'][371]++;
    return;
  }
  _$jscoverage['elastic-filter.js'][374]++;
  if (typeof app.view_model.settings.account_id == "undefined" || typeof app.view_model.settings.access_key == "undefined") {
    _$jscoverage['elastic-filter.js'][375]++;
    return next(new Error("Empty credentials."));
  }
  _$jscoverage['elastic-filter.js'][378]++;
  ud.socket.connect(ko.utils.unwrapObservable(app.view_model.settings.url), {"resource": "websocket.api/1.5", "account-id": ko.utils.unwrapObservable(app.view_model.settings.account_id), "access-key": ko.utils.unwrapObservable(app.view_model.settings.access_key)}, (function (error, socket) {
  _$jscoverage['elastic-filter.js'][384]++;
  app.socket = socket;
  _$jscoverage['elastic-filter.js'][387]++;
  if (error) {
    _$jscoverage['elastic-filter.js'][388]++;
    return next(error);
  }
  _$jscoverage['elastic-filter.js'][391]++;
  app.socket.once("reconnect", (function () {
  _$jscoverage['elastic-filter.js'][392]++;
  app.debug(new Error("Reconnecting, re-initializing ElasticFilter.").arguments);
  _$jscoverage['elastic-filter.js'][393]++;
  app.init();
}));
  _$jscoverage['elastic-filter.js'][396]++;
  app.view_model.session_id(app.socket.sessionid);
  _$jscoverage['elastic-filter.js'][398]++;
  return next(null, app.socket);
}));
})], "settings": ["socket", (function (next, report) {
  _$jscoverage['elastic-filter.js'][409]++;
  app.debug("init", "auto", "settings");
  _$jscoverage['elastic-filter.js'][411]++;
  app.socket.request("get", "api/v1/settings", (function (error, response) {
  _$jscoverage['elastic-filter.js'][413]++;
  app.log("settings", response);
  _$jscoverage['elastic-filter.js'][415]++;
  if (error || ! response) {
    _$jscoverage['elastic-filter.js'][416]++;
    return next(app.log(error || new Error("Request for index settings returned no results.")));
  }
  _$jscoverage['elastic-filter.js'][419]++;
  ko.mapping.fromJS({"settings": response.settings}, app.view_model);
  _$jscoverage['elastic-filter.js'][421]++;
  app.ready();
  _$jscoverage['elastic-filter.js'][423]++;
  return next(null, app.settings);
}));
})], "ready": ["settings", (function (next, report) {
  _$jscoverage['elastic-filter.js'][434]++;
  app.debug("init", "auto", "ready", report);
  _$jscoverage['elastic-filter.js'][437]++;
  app.view_model.sort(ko.mapping.toJS(app.view_model.settings.defaults.sort));
  _$jscoverage['elastic-filter.js'][438]++;
  app.view_model.size(parseInt(app.view_model.settings.per_page()));
  _$jscoverage['elastic-filter.js'][441]++;
  if (app.bindings_initialized.indexOf("elastic-filter") !== -1) {
    _$jscoverage['elastic-filter.js'][442]++;
    app.search_request();
  }
  _$jscoverage['elastic-filter.js'][446]++;
  app.view_model.elastic_ready(true);
  _$jscoverage['elastic-filter.js'][448]++;
  next(null, app.view_model.elastic_ready());
})]}, app.initialized);
  _$jscoverage['elastic-filter.js'][454]++;
  return this;
});
  _$jscoverage['elastic-filter.js'][463]++;
  app.search_request = (function (callback) {
  _$jscoverage['elastic-filter.js'][465]++;
  app.profile("search_request");
  _$jscoverage['elastic-filter.js'][467]++;
  var request = {index: app.view_model.settings.index(), query: jQuery.extend(true, {"match_all": {}}, ko.mapping.toJS(app.view_model.query)), facets: ko.mapping.toJS(app.view_model.settings.facets), size: app.view_model.size(), sort: app.view_model.sort()};
  _$jscoverage['elastic-filter.js'][475]++;
  request = utils.clean_object(request);
  _$jscoverage['elastic-filter.js'][478]++;
  app.computed_query = (function () {
  _$jscoverage['elastic-filter.js'][479]++;
  return request;
});
  _$jscoverage['elastic-filter.js'][482]++;
  app.log("search_request_data", "Data Before Send", request);
  _$jscoverage['elastic-filter.js'][484]++;
  app.view_model.state("loading");
  _$jscoverage['elastic-filter.js'][486]++;
  app.socket.request("post", "api/v1/search", request, (function (error, response) {
  _$jscoverage['elastic-filter.js'][489]++;
  app.last_response = (function () {
  _$jscoverage['elastic-filter.js'][490]++;
  return response;
});
  _$jscoverage['elastic-filter.js'][494]++;
  app.profile("search_request", "Have Cloud Response.", response);
  _$jscoverage['elastic-filter.js'][495]++;
  app.profile("search_request", "Request Mapping Start.");
  _$jscoverage['elastic-filter.js'][497]++;
  var documents = [];
  _$jscoverage['elastic-filter.js'][498]++;
  jQuery.each(typeof response.documents !== "undefined"? response.documents: [], (function () {
  _$jscoverage['elastic-filter.js'][499]++;
  documents.push(arguments[1]);
}));
  _$jscoverage['elastic-filter.js'][502]++;
  app.view_model.documents(ko.utils.arrayMap(documents, (function (item) {
  _$jscoverage['elastic-filter.js'][503]++;
  return new app._document(item);
})));
  _$jscoverage['elastic-filter.js'][506]++;
  for (var i in typeof response.meta.facets != "undefined"? response.meta.facets: {}) {
    _$jscoverage['elastic-filter.js'][507]++;
    var found = false;
    _$jscoverage['elastic-filter.js'][509]++;
    ko.utils.arrayForEach(app.view_model.facets(), (function (existing_facet) {
  _$jscoverage['elastic-filter.js'][510]++;
  if (i == existing_facet._label) {
    _$jscoverage['elastic-filter.js'][512]++;
    found = true;
  }
}));
    _$jscoverage['elastic-filter.js'][516]++;
    if (! found) {
      _$jscoverage['elastic-filter.js'][517]++;
      app.view_model.facets.push(new app._facet(response.meta.facets[i], i));
    }
}
  _$jscoverage['elastic-filter.js'][521]++;
  app.view_model.total(typeof response.meta.total != "undefined"? response.meta.total: 0);
  _$jscoverage['elastic-filter.js'][522]++;
  app.view_model.state("ready");
  _$jscoverage['elastic-filter.js'][525]++;
  app.profile("search_request", "Request Mapping Complete.");
  _$jscoverage['elastic-filter.js'][527]++;
  return typeof callback === "function"? callback(error, response): response;
}));
});
  _$jscoverage['elastic-filter.js'][536]++;
  app.custom_search = (function (callback) {
  _$jscoverage['elastic-filter.js'][537]++;
  app.profile("custom_search_start");
  _$jscoverage['elastic-filter.js'][539]++;
  var request = {index: app.view_model.settings.index(), query: {"query_string": {"query": app.view_model.query.full_text()}}, size: app.view_model.size(), sort: app.view_model.sort()};
  _$jscoverage['elastic-filter.js'][546]++;
  app.socket.request("post", "api/v1/search", request, callback);
  _$jscoverage['elastic-filter.js'][548]++;
  app.profile("custom_search_end");
  _$jscoverage['elastic-filter.js'][550]++;
  return true;
});
  _$jscoverage['elastic-filter.js'][558]++;
  app.get_json = (function () {
  _$jscoverage['elastic-filter.js'][559]++;
  return JSON.parse(ko.mapping.toJSON(app.view_model));
});
  _$jscoverage['elastic-filter.js'][566]++;
  app.initialized = (function (error, report) {
  _$jscoverage['elastic-filter.js'][567]++;
  app.debug("initialized", arguments);
  _$jscoverage['elastic-filter.js'][569]++;
  app.initialization = app.log(error? "Initializaiton Failed.": "Initializaiton Done.", (report? report: error));
  _$jscoverage['elastic-filter.js'][572]++;
  if (typeof app.ready === "function") {
    _$jscoverage['elastic-filter.js'][573]++;
    app.ready(app, error, report);
  }
  _$jscoverage['elastic-filter.js'][576]++;
  return app.initialization;
});
  _$jscoverage['elastic-filter.js'][584]++;
  app.facet_functions = {"facet_after_render": (function (data) {
}), "facet_before_remove": (function (element) {
  _$jscoverage['elastic-filter.js'][600]++;
  ko.removeNode(element);
}), "facet_after_add": (function (element, something, object) {
}), "facet_template": (function (facet) {
  _$jscoverage['elastic-filter.js'][618]++;
  var templates = [];
  _$jscoverage['elastic-filter.js'][621]++;
  switch (facet && facet._type) {
  case "terms":
    _$jscoverage['elastic-filter.js'][624]++;
    templates.push("template-facet-terms");
    _$jscoverage['elastic-filter.js'][625]++;
    break;
  }
  _$jscoverage['elastic-filter.js'][630]++;
  templates.push("template-default-facet");
  _$jscoverage['elastic-filter.js'][632]++;
  return app.model_functions._get_template(templates);
}), "submit_facets": (function (data, event) {
  _$jscoverage['elastic-filter.js'][640]++;
  app.debug("facet_functions", "submit_facets");
  _$jscoverage['elastic-filter.js'][641]++;
  app.view_model.size(parseInt(app.view_model.settings.per_page()));
  _$jscoverage['elastic-filter.js'][642]++;
  app.search_request();
  _$jscoverage['elastic-filter.js'][643]++;
  return;
})};
  _$jscoverage['elastic-filter.js'][652]++;
  app.document_functions = {"document_after_render": (function (data, object) {
}), "document_before_remove": (function (element, something, object) {
  _$jscoverage['elastic-filter.js'][668]++;
  ko.removeNode(element);
}), "document_after_add": (function (element, something, object) {
}), "document_template": (function (document) {
  _$jscoverage['elastic-filter.js'][684]++;
  return app.model_functions._get_template(["template-default-document"]);
}), "sort_by": (function (data, event) {
  _$jscoverage['elastic-filter.js'][691]++;
  app.debug("document_functions", "sort");
  _$jscoverage['elastic-filter.js'][693]++;
  jQuery(event.target).trigger("sort", [data]);
  _$jscoverage['elastic-filter.js'][695]++;
  var field = jQuery(event.target).data("field");
  _$jscoverage['elastic-filter.js'][697]++;
  var sort = ko.utils.arrayFirst(data.sort_options, (function (option) {
  _$jscoverage['elastic-filter.js'][698]++;
  return typeof option[field] != "undefined";
}));
  _$jscoverage['elastic-filter.js'][701]++;
  if (app.view_model.sort()) {
    _$jscoverage['elastic-filter.js'][702]++;
    var existing_sort = typeof app.view_model.sort()[field] != "undefined"? app.view_model.sort()[field]: false;
    _$jscoverage['elastic-filter.js'][703]++;
    if (existing_sort) {
      _$jscoverage['elastic-filter.js'][704]++;
      sort[field].order = app.view_model.sort()[field].order == "desc"? "asc": "desc";
    }
  }
  _$jscoverage['elastic-filter.js'][708]++;
  app.view_model.sort(sort);
  _$jscoverage['elastic-filter.js'][709]++;
  app.view_model.size(parseInt(app.view_model.settings.per_page()));
  _$jscoverage['elastic-filter.js'][710]++;
  app.search_request();
}), "is_active_sort": (function (data) {
  _$jscoverage['elastic-filter.js'][717]++;
  if (! app.view_model.sort()) {
    _$jscoverage['elastic-filter.js'][718]++;
    return "disabled";
  }
  _$jscoverage['elastic-filter.js'][720]++;
  return typeof app.view_model.sort()[data] != "undefined"? "active": "disabled";
}), "have_more": (function (data, event) {
  _$jscoverage['elastic-filter.js'][727]++;
  app.debug("document_functions", "have_more()");
  _$jscoverage['elastic-filter.js'][730]++;
  app.have_more = ko.computed({"owner": this, "read": (function () {
  _$jscoverage['elastic-filter.js'][733]++;
  return (app.view_model.total() > app.view_model.documents().length)? true: false;
})});
  _$jscoverage['elastic-filter.js'][737]++;
  return app.have_more();
}), "load_more": (function (data, event) {
  _$jscoverage['elastic-filter.js'][746]++;
  app.debug("document_functions", "load_more()");
  _$jscoverage['elastic-filter.js'][747]++;
  app.view_model.size(parseInt(app.view_model.size()) + parseInt(app.view_model.settings.per_page()));
  _$jscoverage['elastic-filter.js'][748]++;
  app.search_request();
})};
  _$jscoverage['elastic-filter.js'][757]++;
  app.model_functions = {"_get_template": (function (templates) {
  _$jscoverage['elastic-filter.js'][765]++;
  for (i in templates? templates: []) {
    _$jscoverage['elastic-filter.js'][766]++;
    if (document.getElementById(templates[i])) {
      _$jscoverage['elastic-filter.js'][767]++;
      return templates[i];
    }
}
  _$jscoverage['elastic-filter.js'][771]++;
  return templates[0];
}), "_remove_item": (function (index, id) {
  _$jscoverage['elastic-filter.js'][784]++;
  var items = this[index];
  _$jscoverage['elastic-filter.js'][786]++;
  ko.utils.arrayFirst(items, (function (item) {
  _$jscoverage['elastic-filter.js'][788]++;
  if (item && parseInt(item.id) === parseInt(id)) {
    _$jscoverage['elastic-filter.js'][789]++;
    items.remove(document);
    _$jscoverage['elastic-filter.js'][790]++;
    ko.utils.arrayRemoveItem(item);
  }
}));
})};
  _$jscoverage['elastic-filter.js'][804]++;
  var utils = app.utilis = {"back_support": (function () {
  _$jscoverage['elastic-filter.js'][813]++;
  Object.keys = Object.keys || (function () {
  _$jscoverage['elastic-filter.js'][814]++;
  var hasOwnProperty = Object.prototype.hasOwnProperty, hasDontEnumBug = ! ({toString: null}).propertyIsEnumerable("toString"), DontEnums = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"], DontEnumsLength = DontEnums.length;
  _$jscoverage['elastic-filter.js'][820]++;
  return (function (o) {
  _$jscoverage['elastic-filter.js'][821]++;
  if (typeof o != "object" && typeof o != "function" || o === null) {
    _$jscoverage['elastic-filter.js'][822]++;
    throw new TypeError("Object.keys called on a non-object");
  }
  _$jscoverage['elastic-filter.js'][825]++;
  var result = [];
  _$jscoverage['elastic-filter.js'][826]++;
  for (var name in o) {
    _$jscoverage['elastic-filter.js'][827]++;
    if (hasOwnProperty.call(o, name)) {
      _$jscoverage['elastic-filter.js'][828]++;
      result.push(name);
    }
}
  _$jscoverage['elastic-filter.js'][832]++;
  if (hasDontEnumBug) {
    _$jscoverage['elastic-filter.js'][833]++;
    for (var i = 0; i < DontEnumsLength; i++) {
      _$jscoverage['elastic-filter.js'][834]++;
      if (hasOwnProperty.call(o, DontEnums[i])) {
        _$jscoverage['elastic-filter.js'][835]++;
        result.push(DontEnums[i]);
      }
}
  }
  _$jscoverage['elastic-filter.js'][840]++;
  return result;
});
})();
}), "get_methods": (function (object) {
  _$jscoverage['elastic-filter.js'][854]++;
  var functions = jQuery.map(object, (function (item, name) {
  _$jscoverage['elastic-filter.js'][855]++;
  if (typeof item === "function") {
    _$jscoverage['elastic-filter.js'][856]++;
    return name;
  }
}));
  _$jscoverage['elastic-filter.js'][860]++;
  return functions;
}), "json_editor": (function () {
  _$jscoverage['elastic-filter.js'][872]++;
  ud.load.js({"JSONEditor": "http://ud-cdn.com/js/ud.json.editor.js"}, (function () {
  _$jscoverage['elastic-filter.js'][874]++;
  ud.load.css("http://ud-cdn.com/js/assets/ud.json.editor.css");
  _$jscoverage['elastic-filter.js'][876]++;
  app.json_editor = new JSONEditor(jQuery(".elastic_json_editor").get(0), {"indentation": 2, "search": false, "history": false});
}));
}), "contains": (function (a, obj) {
  _$jscoverage['elastic-filter.js'][893]++;
  for (var i = 0; i < a.length; i++) {
    _$jscoverage['elastic-filter.js'][894]++;
    if (a[i] === obj) {
      _$jscoverage['elastic-filter.js'][895]++;
      return true;
    }
}
  _$jscoverage['elastic-filter.js'][899]++;
  return false;
}), "clean_object": (function (object, args) {
  _$jscoverage['elastic-filter.js'][910]++;
  jQuery.extend(true, {"strip_values": []}, args);
  _$jscoverage['elastic-filter.js'][914]++;
  for (i in object) {
    _$jscoverage['elastic-filter.js'][916]++;
    if (! object[i]) {
      _$jscoverage['elastic-filter.js'][917]++;
      delete object[i];
    }
    _$jscoverage['elastic-filter.js'][920]++;
    if (object[i] === null) {
      _$jscoverage['elastic-filter.js'][921]++;
      delete object[i];
    }
    _$jscoverage['elastic-filter.js'][924]++;
    if (typeof object[i] === "object") {
      _$jscoverage['elastic-filter.js'][926]++;
      if (Object.keys(object[i]).length) {
        _$jscoverage['elastic-filter.js'][927]++;
        object[i] = utils.clean_object(object[i], args);
      }
      else {
        _$jscoverage['elastic-filter.js'][929]++;
        delete object[i];
      }
    }
}
  _$jscoverage['elastic-filter.js'][936]++;
  return object;
})};
  _$jscoverage['elastic-filter.js'][942]++;
  ud.load.js(app._required, (function () {
  _$jscoverage['elastic-filter.js'][943]++;
  jQuery(document).trigger("elastic_filter::initialize");
}));
  _$jscoverage['elastic-filter.js'][946]++;
  return this;
})();
_$jscoverage['elastic-filter.js'].source = ["/** ========================================================="," * elastic_filter.js v0.5"," * http://usabilitydynamics.com"," * ========================================================="," *"," * Commercial use requires one-time license fee"," * http://usabilitydynamics.com/licenses"," *"," * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\".."," * http://usabilitydynamics.com/warranty"," *"," * Copyright 2012-2013 Usability Dynamics, Inc. (usabilitydynamics.com)"," *"," * Console Log Commands"," * ===================="," * Last Query: elastic_filter.computed_query();"," *"," * ========================================================= */","","new (function( args ) {","","  // Merge Custom Args into Default Args and then into Self","  var app = window.ef_app = jQuery.extend( true, this, {","","    // Local Settings.","    'settings': {","","      'account_id': undefined,","","      'access_key': undefined,","","      'per_page': 10,","","      'debug': false,","","      'visual_debug': false,","","      'url': 'https://cloud.usabilitydynamics.com',","","      'index': ''","","    },","","    // Result Items.","    'documents': [],","","    // Facet Objects.","    'facets': [],","","    // Available Sorting Types","    'sort_options': [],","","    // Defaults from CloudAPI","    'defaults': null,","","    // Overall App State","    'state': 'loading',","","    // Query Object","    'query': {","","      // Full Text Search","      'full_text': null,","","      // Single Field Search(es)","      'field': [],","","      // Multiple Term Search(es)","      'terms': [],","","      // Range Search(es)","      'range': [],","","      // Fuzzy Term / Date / Number Search(es)","      'fuzzy': [],","","      // Start Result","      'from': 0","","    },","","    'size': 0,","","    // Sort Order","    'sort': null,","","    'bindings_initialized': [],","","    // Total available results. Integer","    'total': null,","","    // General Status Message. String.","    'message': '',","","    // Set to true once fully loaded","    'elastic_ready': false,","","    // Socket Session ID","    'session_id': null,","","    // Global Variable for Data Storage","    'global': window.__elastic_filter = {},","","    // Initialization Complete","    'ready': function() {","    },","","    // Required Assets","    '_required': {","      'io': '//ud-cdn.com/js/ud.socket/1.0.0/ud.socket.js',","      'ko.mapping': '//ud-cdn.com/js/knockout.mapping/2.3.2/knockout.mapping.js',","      'async': '//ud-cdn.com/js/async/1.0/async.js',","      'ud.ko': '//ud-cdn.com/js/knockout.ud/1.0/knockout.ud.js',","      'ud.select': '//ud-cdn.com/js/ud.select/3.2/ud.select.js',","      'jq-lazyload': '//ud-cdn.com/js/jquery.lazyload/1.8.2/jquery.lazyload.js'","    },","","    // Application Event Log","    '_log': {","","      // Active Socket Subscriptions","      'subscriptions': {},","","      // Search History","      'search': [],","","      // Debug History","      'debug': [],","","      // Active Profilers","      'profilers': {}","","    }","","  }, args );","","  /**","   * Document constructor. Use to normalize incoming object.","   */","  app._document = function( item ) {","    return item;","  };","","  /**","   * Facet constructor. Use to normalize incoming object.","   */","  app._facet = function( item, title ) {","","    var options = [];","    for( var i in item.terms ) {","      options.push( {","        'text': item.terms[i].term,","        'id': item.terms[i].term","      } );","    }","    item._label = title;","","    // Objervable dropdown options","    item.options = ko.observableArray( options );","","    // Observable value","    item.value = ko.observable();","","    // Observable multiple options","    item.select_multiple = ko.observableArray();","","    // Build Terms Query based on Facet Selections","    item.select_multiple.subscribe( function( value ) {","","      // Organize terms inside query","      app.view_model.query.terms.remove( ko.utils.arrayFirst( app.view_model.query.terms(), function( term ) {","        return typeof term[title] != 'undefined';","      } ) );","","      if( value.length ) {","        var object = {};","        object[title] = value;","        app.view_model.query.terms.push( object );","      }","","      // Set default size","      app.view_model.size( parseInt( app.view_model.settings.per_page() ) );","","      // Do request","      app.search_request();","","    } );","","    // Add CSS class for wrapper of facet to be able to manage its appearence in different states","    item.css_class = ko.computed( function() {","      var len = typeof item.options() !== 'undefined' ? item.options().length : 0;","      var len_class = len == 1 ? 'eff_single_option' : (!len ? 'eff_no_options' : 'eff_options_' + len);","      return len_class + ' ef_facet_' + title.replace( ' ', '_' );","    } );","","    return item;","  };","","  /**","   * Profiler. A note is required to output.","   *","   * @version 0.1.1","   * @updated 0.1.5","   */","  app.profile = function( name, note, args ) {","","    // If note is set, output timer.","    if( app._log.profilers[ name ] &amp;&amp; note ) {","","      var output = [ 'Profiler', name, note, ( new Date().getTime() - app._log.profilers[ name ] ) / 1000 ];","","      if( args ) {","        output.push( args );","      }","","      return app.log.apply( this, output );","    }","","    // Mark app.profiler as active","    app._log.profilers[ name ] = new Date().getTime();","","    return this;","  }","","  /**","   * Internal logging function","   *","   * @updated 0.4","   * @since 0.1","   */","  app.log = function() {","","    if( typeof console === 'undefined' ) {","      return arguments ? arguments : null;","    }","","    if( arguments[0] instanceof Error ) {","      console.error( 'ElasticFilter Fatal Error:', arguments[0].message );","      return arguments;","    }","","    console.log( arguments );","","    return arguments ? arguments : null;","","  };","","  /**","   * Debug Logging. Requires debug to be set to true, unless an Error object is passed.","   *","   * @author potanin@UD","   */","  app.debug = function() {","","    app._log.debug.push( {'time': new Date().getTime(), 'data': arguments} );","","    return (ko.utils.unwrapObservable( app.settings.debug ) || arguments[0] instanceof Error ?","      app.log.apply( this, arguments ) : arguments );","","  }","","  /**","   * Initial Asynchronous Initialization","   *","   * @todo Add Meta Mapping and have them return labels","   * @author potanin@UD","   */","  app.init = function() {","","    utils.back_support();","","    app.debug( 'init' );","","    // Make Things Happen.","    async.auto( {","","      /**","       * Verify Dependancies and Create Knockout Bindings for Elastic Filter Elements","       */","      'binding_handlers': [ function( next, report ) {","        app.debug( 'init', 'auto', 'binding_handlers' );","","        if( typeof ko !== 'object' ) {","          return next( new Error( 'Missing Knockout.' ) );","        }","","        if( typeof io !== 'object' ) {","          return next( app.debug( new Error( 'Missing Socket.io.' ) ) );","        }","","        // Main Configurations. Merges DOM Settings into app.settings","        ko.bindingHandlers[ 'elastic-filter' ] = {","","          'init': function( element, valueAccessor ) {","            app.log( 'binding_handlers', 'elastic-filter', 'init' );","            ko.mapping.fromJS( {'settings': jQuery.extend( true, {}, app.settings, ko.utils.unwrapObservable( valueAccessor() ) )}, app.view_model );","            app.bindings_initialized.push( 'elastic-filter' );","          }","","        }","","        /**","         * Handler for fulltext search function. Similar to \"select\"","         *","         */","        ko.bindingHandlers[ 'fulltext-search' ] = {","","          'init': function( element, valueAccessor, allBindingsAccessor, viewModel, bindingContext ) {","            app.debug( 'binding_handlers', 'fulltext-search', 'init' );","","            if( typeof jQuery().select2 == 'undefined' ) {","              return new Error( 'Select2 library is required for Fulltext Search feature' );","            }","","            jQuery( element ).select2( valueAccessor() );","","            if( typeof allBindingsAccessor().elastic_settings != 'undefined' ) {","              ko.mapping.fromJS( {'settings': allBindingsAccessor().elastic_settings}, app.view_model );","            }","","            ko.utils.domNodeDisposal.addDisposeCallback( element, function() {","              jQuery( element ).select2( 'destroy' );","            } );","","            app.bindings_initialized.push( 'fulltext-search' );","          }","","        };","","        return next( null, [ ko.bindingHandlers ] );","","      }],","","      /**","       * Create Observables and Computed Functions","       *","       */","      'observable': [ 'binding_handlers', function( next, report ) {","        app.debug( 'init', 'auto', 'observable' );","","        // Create Initial JSON Object from App, and Extend Template Functions into Root","        app.view_model = ko.mapping.fromJS( app, {","","          'ignore': utils.get_methods( app ).concat( '_log', '_required', 'model_functions', 'facet_functions', 'document_functions', 'utils', 'success', 'global' )","","        } );","","        /*app.view_model.query.full_text.subscribe(function(value){","         app.search_request();","         });*/","","        // Execute Binding Magic","        ko.applyBindings( app.view_model );","","        // Expand Additional Template Functions into View Model","        jQuery.extend( true, app.view_model, app.facet_functions, app.document_functions );","","        // Always a success.","        return next( null, app );","","      }],","","      /**","       * Initialize Socket Connection","       *","       */","      'socket': [ 'observable', function( next ) {","        app.debug( 'init', 'auto', 'socket' );","","        if( !app.bindings_initialized.length ) {","          return;","        }","","        if( typeof app.view_model.settings[ 'account_id' ] == 'undefined' || typeof app.view_model.settings[ 'access_key' ] == 'undefined' ) {","          return next( new Error( 'Empty credentials.' ) );","        }","","        ud.socket.connect( ko.utils.unwrapObservable( app.view_model.settings[ 'url' ] ), {","          'resource': 'websocket.api/1.5',","          'account-id': ko.utils.unwrapObservable( app.view_model.settings[ 'account_id' ] ),","          'access-key': ko.utils.unwrapObservable( app.view_model.settings[ 'access_key' ] )","        }, function( error, socket ) {","","          app.socket = socket;","","          // Break initializtion chain since a WebSocket connection is required","          if( error ) {","            return next( error );","          }","","          app.socket.once( 'reconnect', function() {","            app.debug( new Error( 'Reconnecting, re-initializing ElasticFilter.' ).arguments );","            app.init();","          } );","","          app.view_model.session_id( app.socket.sessionid );","","          return next( null, app.socket );","","        } );","","      }],","","      /**","       * Load Settings and setup Defaults. Settings request could also be filtered via { 'path': 'defaults' }","       *","       */","      'settings': [ 'socket', function( next, report ) {","        app.debug( 'init', 'auto', 'settings' );","","        app.socket.request( 'get', 'api/v1/settings', function( error, response ) {","","          app.log( 'settings', response );","","          if( error || !response ) {","            return next( app.log( error || new Error( 'Request for index settings returned no results.' ) ) );","          }","","          ko.mapping.fromJS( {'settings': response.settings}, app.view_model );","","          app.ready();","","          return next( null, app.settings );","","        } );","","      }],","","      /**","       * Fully Loaded, make initial request","       *","       */","      'ready': [ 'settings', function( next, report ) {","        app.debug( 'init', 'auto', 'ready', report );","","        // Make Default Search Requests","        app.view_model.sort( ko.mapping.toJS( app.view_model.settings.defaults.sort ) );","        app.view_model.size( parseInt( app.view_model.settings.per_page() ) );","","        // Do this only if elastic-filter binding exists on the page","        if( app.bindings_initialized.indexOf( 'elastic-filter' ) !== -1 ) {","          app.search_request();","        }","","        // Fully loaded.","        app.view_model.elastic_ready( true );","","        next( null, app.view_model.elastic_ready() );","","      }]","","    }, app.initialized );","","    return this;","","  }","","  /**","   * Execute Search Request. Gets value from computed_query observable","   *","   * @since 0.1.5","   */","  app.search_request = function( callback ) {","","    app.profile( 'search_request' );","","    var request = {","      index: app.view_model.settings.index(),","      query: jQuery.extend( true, {'match_all': {}}, ko.mapping.toJS( app.view_model.query ) ),","      facets: ko.mapping.toJS( app.view_model.settings.facets ),","      size: app.view_model.size(),","      sort: app.view_model.sort()","    }","","    request = utils.clean_object( request );","","    /** Temp logger */","    app.computed_query = function() {","      return request;","    }","","    app.log( 'search_request_data', 'Data Before Send', request );","","    app.view_model.state( 'loading' );","","    app.socket.request( 'post', 'api/v1/search', request, function( error, response ) {","","      /** Temp logger */","      app.last_response = function() {","        return response;","      }","","      //** Profiling */","      app.profile( 'search_request', 'Have Cloud Response.', response );","      app.profile( 'search_request', 'Request Mapping Start.' );","","      var documents = [];","      jQuery.each( typeof response.documents !== 'undefined' ? response.documents : [], function() {","        documents.push( arguments[1] );","      } );","","      app.view_model.documents( ko.utils.arrayMap( documents, function( item ) {","        return new app._document( item );","      } ) );","","      for( var i in typeof response.meta.facets != 'undefined' ? response.meta.facets : {} ) {","        var found = false;","","        ko.utils.arrayForEach( app.view_model.facets(), function( existing_facet ) {","          if( i == existing_facet._label ) {","            //existing_facet.options( item.options );","            found = true;","          }","        } );","","        if( !found ) {","          app.view_model.facets.push( new app._facet( response.meta.facets[i], i ) );","        }","      }","","      app.view_model.total( typeof response.meta.total != 'undefined' ? response.meta.total : 0 );","      app.view_model.state( 'ready' );","","      //** Profiling */","      app.profile( 'search_request', 'Request Mapping Complete.' );","","      return typeof callback === 'function' ? callback( error, response ) : response;","","    } );","","  };","","  /**","   * Custom search requester.","   */","  app.custom_search = function( callback ) {","    app.profile( 'custom_search_start' );","","    var request = {","      index: app.view_model.settings.index(),","      query: { \"query_string\": { \"query\": app.view_model.query.full_text() } },","      size: app.view_model.size(),","      sort: app.view_model.sort()","    }","","    app.socket.request( 'post', 'api/v1/search', request, callback );","","    app.profile( 'custom_search_end' );","","    return true;","  }","","  /**","   * Get JSON Output of full View Model","   *","   * @since 0.1.5","   */","  app.get_json = function() {","    return JSON.parse( ko.mapping.toJSON( app.view_model ) );","  };","","  /**","   * Post Initialization","   *","   */","  app.initialized = function( error, report ) {","    app.debug( 'initialized', arguments );","","    app.initialization = app.log( error ? 'Initializaiton Failed.' : 'Initializaiton Done.', (","      report ? report : error ) );","","    if( typeof app.ready === 'function' ) {","      app.ready( app, error, report );","    }","","    return app.initialization;","","  };","","  /**","   * Facet Functions","   *","   */","  app.facet_functions = {","","    /**","     * Single Facet Rendered in DOM","     *","     * @event afterRender","     */","    'facet_after_render': function( data ) {","    },","","    /**","     * Before Single Facet is Removed from DOM","     *","     * @event beforeRemove","     */","    'facet_before_remove': function( element ) { // app.debug( 'facet_functions', 'facet_before_remove' );","      ko.removeNode( element );","    },","","    /**","     * After a Single Facet is Added to DOM","     *","     * @event afterAdd","     */","    'facet_after_add': function( element, something, object ) {","    },","","    /**","     * Get Best Template for Facet","     *","     * @todo Use .notifySubscribers() to trigger request()","     */","    'facet_template': function( facet ) { // app.debug( 'facet_functions', 'facet_template' );","","      var templates = [];","","      // Add Possible Templates","      switch( facet &amp;&amp; facet._type ) {","","        case 'terms':","          templates.push( 'template-facet-terms' );","          break;","","      }","","      // Default Facet Template","      templates.push( 'template-default-facet' );","","      return app.model_functions._get_template( templates );","","    },","","    /**","     * Submit Search","     */","    'submit_facets': function( data, event ) {","      app.debug( 'facet_functions', 'submit_facets' );","      app.view_model.size( parseInt( app.view_model.settings.per_page() ) );","      app.search_request();","      return;","    }","","  };","","  /**","   * Document Functions","   *","   */","  app.document_functions = {","","    /**","     * Single Document Rendered in DOM","     *","     * @event afterRender","     */","    'document_after_render': function( data, object ) {","    },","","    /**","     * Before Single Document is Removed from DOM","     *","     * @event beforeRemove","     */","    'document_before_remove': function( element, something, object ) { // app.debug( 'document_functions', 'document_before_remove' );","      ko.removeNode( element );","    },","","    /**","     * After a Single Document is Added to DOM","     *","     * @event afterAdd","     */","    'document_after_add': function( element, something, object ) {","    },","","    /**","     * Get Best Template for Document","     *","     */","    'document_template': function( document ) { // app.debug( 'document_functions', 'document_template' );","      return app.model_functions._get_template( ['template-default-document' ] );","    },","","    /**","     * Toggle Sort Option","     */","    'sort_by': function( data, event ) {","      app.debug( 'document_functions', 'sort' );","","      jQuery( event.target ).trigger( 'sort', [data] );","","      var field = jQuery( event.target ).data( 'field' );","","      var sort = ko.utils.arrayFirst( data.sort_options, function( option ) {","        return typeof option[field] != 'undefined';","      } );","","      if( app.view_model.sort() ) {","        var existing_sort = typeof app.view_model.sort()[field] != 'undefined' ? app.view_model.sort()[field] : false;","        if( existing_sort ) {","          sort[field].order = app.view_model.sort()[field].order == 'desc' ? 'asc' : 'desc';","        }","      }","","      app.view_model.sort( sort );","      app.view_model.size( parseInt( app.view_model.settings.per_page() ) );","      app.search_request();","    },","","    /**","     * Determine if sort type is active by sort","     */","    'is_active_sort': function( data ) {","      if( !app.view_model.sort() ) {","        return 'disabled';","      }","      return typeof app.view_model.sort()[data] != 'undefined' ? 'active' : 'disabled';","    },","","    /**","     * If there are more results available","     */","    'have_more': function( data, event ) {","      app.debug( 'document_functions', 'have_more()' );","","      // Create Obervable if it has not been created yet.","      app.have_more = ko.computed( {","        'owner': this,","        'read': function() {","          return ( app.view_model.total() &gt; app.view_model.documents().length ) ? true : false;","        }","      } );","","      return app.have_more();","","    },","","    /**","     * Load More","     *","     */","    'load_more': function( data, event ) {","      app.debug( 'document_functions', 'load_more()' );","      app.view_model.size( parseInt( app.view_model.size() ) + parseInt( app.view_model.settings.per_page() ) );","      app.search_request();","    }","","  };","","  /**","   * Template Functions, expanded into _view_model","   *","   */","  app.model_functions = {","","    /**","     * Accepts an array of Knockout template IDs, and returns first one that exists in document","     *","     */","    '_get_template': function( templates ) { // app.debug( 'model_functions', '_get_template' );","","      for( i in templates ? templates : [] ) {","        if( document.getElementById( templates[i] ) ) {","          return templates[i];","        }","      }","","      return templates[0];","","    },","","    /**","     * Delete a Document by ID (Could be triggered by subscribed event)","     *","     * elastic_filter.observable._documents.remove( function( item ) { item.id = 6552 } );","     *","     * @todo Does not work. Perhaps some issues with computation..","     */","    '_remove_item': function( index, id ) { // app.debug( 'model_functions', '_remove_item' );","","      var items = this[ index ];","","      ko.utils.arrayFirst( items, function( item ) {","","        if( item &amp;&amp; parseInt( item.id ) === parseInt( id ) ) {","          items.remove( document );","          ko.utils.arrayRemoveItem( item );","        }","","      } );","","    }","","  };","","  /**","   * Utility Functions","   *","   * @author potanin@UD","   */","  var utils = app.utilis = {","","    /**","     * Adds Compatibility with Crappy Browsers","     *","     */","    'back_support': function() {","","      //** IE fix for unsupported methods */","      Object.keys = Object.keys || (function() {","        var hasOwnProperty = Object.prototype.hasOwnProperty, hasDontEnumBug = !{toString: null}.propertyIsEnumerable( \"toString\" ), DontEnums =","          [","            'toString', 'toLocaleString', 'valueOf', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable',","            'constructor'","          ], DontEnumsLength = DontEnums.length;","","        return function( o ) {","          if( typeof o != \"object\" &amp;&amp; typeof o != \"function\" || o === null ) {","            throw new TypeError( \"Object.keys called on a non-object\" );","          }","","          var result = [];","          for( var name in o ) {","            if( hasOwnProperty.call( o, name ) ) {","              result.push( name );","            }","          }","","          if( hasDontEnumBug ) {","            for( var i = 0; i &lt; DontEnumsLength; i++ ) {","              if( hasOwnProperty.call( o, DontEnums[i] ) ) {","                result.push( DontEnums[i] );","              }","            }","          }","","          return result;","        };","      })();","","    },","","    /**","     * I know they are not technically methods.","     *","     * @version 0.1.1","     * @author potanin@UD","     */","    'get_methods': function( object ) {","","      var functions = jQuery.map( object, function( item, name ) {","        if( typeof item === 'function' ) {","          return name;","        }","      } );","","      return functions;","","    },","","    /**","     * Load Inline JSON Editor (Needs CSS Fixes and some Logic Fixes to be useful)","     *","     * @version 0.1.1","     * @author potanin@UD","     */","    'json_editor': function() {","","      ud.load.js( {'JSONEditor': 'http://ud-cdn.com/js/ud.json.editor.js'}, function() {","","        ud.load.css( 'http://ud-cdn.com/js/assets/ud.json.editor.css' );","","        app.json_editor = new JSONEditor( jQuery( '.elastic_json_editor' ).get( 0 ), {","          'indentation': 2,","          'search': false,","          'history': false","        } );","","      } );","","    },","","    /**","     * Test if Array contains an item","     *","     * @version 0.1.1","     */","    'contains': function( a, obj ) {","","      for( var i = 0; i &lt; a.length; i++ ) {","        if( a[i] === obj ) {","          return true;","        }","      }","","      return false;","","    },","","    /**","     * Remove empty values","     *","     * @version 0.1.1","     */","    'clean_object': function( object, args ) {","","      jQuery.extend( true, {","        'strip_values': []","      }, args );","","      for( i in object ) {","","        if( !object[i] ) {","          delete object[i];","        }","","        if( object[i] === null ) {","          delete object[i];","        }","","        if( typeof object[i] === 'object' ) {","","          if( Object.keys( object[i] ).length ) {","            object[i] = utils.clean_object( object[i], args );","          } else {","            delete object[i];","          }","","        }","","      }","","      return object;","    }","","  }","","  // Load Required Assets, and then Initialize","  ud.load.js( app._required, function() {","    jQuery( document ).trigger( 'elastic_filter::initialize' );","  } );","","  return this;","","})();"];
